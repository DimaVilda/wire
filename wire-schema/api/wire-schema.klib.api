// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.squareup.wire:wire-schema>
abstract class com.squareup.wire.schema/EventListener { // com.squareup.wire.schema/EventListener|null[0]
    abstract fun interface Factory : com.squareup.wire.internal/Serializable { // com.squareup.wire.schema/EventListener.Factory|null[0]
        abstract fun create(): com.squareup.wire.schema/EventListener // com.squareup.wire.schema/EventListener.Factory.create|create(){}[0]
    }
    constructor <init>() // com.squareup.wire.schema/EventListener.<init>|<init>(){}[0]
    open fun loadSchemaStart() // com.squareup.wire.schema/EventListener.loadSchemaStart|loadSchemaStart(){}[0]
    open fun loadSchemaSuccess(com.squareup.wire.schema/Schema) // com.squareup.wire.schema/EventListener.loadSchemaSuccess|loadSchemaSuccess(com.squareup.wire.schema.Schema){}[0]
    open fun moveTypesEnd(com.squareup.wire.schema/Schema, kotlin.collections/List<com.squareup.wire.schema.internal/TypeMover.Move>) // com.squareup.wire.schema/EventListener.moveTypesEnd|moveTypesEnd(com.squareup.wire.schema.Schema;kotlin.collections.List<com.squareup.wire.schema.internal.TypeMover.Move>){}[0]
    open fun moveTypesStart(com.squareup.wire.schema/Schema, kotlin.collections/List<com.squareup.wire.schema.internal/TypeMover.Move>) // com.squareup.wire.schema/EventListener.moveTypesStart|moveTypesStart(com.squareup.wire.schema.Schema;kotlin.collections.List<com.squareup.wire.schema.internal.TypeMover.Move>){}[0]
    open fun runFailed(kotlin.collections/List<kotlin/String>) // com.squareup.wire.schema/EventListener.runFailed|runFailed(kotlin.collections.List<kotlin.String>){}[0]
    open fun runStart(com.squareup.wire.schema/WireRun) // com.squareup.wire.schema/EventListener.runStart|runStart(com.squareup.wire.schema.WireRun){}[0]
    open fun runSuccess(com.squareup.wire.schema/WireRun) // com.squareup.wire.schema/EventListener.runSuccess|runSuccess(com.squareup.wire.schema.WireRun){}[0]
    open fun schemaHandlerEnd(com.squareup.wire.schema/SchemaHandler, com.squareup.wire.schema/EmittingRules) // com.squareup.wire.schema/EventListener.schemaHandlerEnd|schemaHandlerEnd(com.squareup.wire.schema.SchemaHandler;com.squareup.wire.schema.EmittingRules){}[0]
    open fun schemaHandlerStart(com.squareup.wire.schema/SchemaHandler, com.squareup.wire.schema/EmittingRules) // com.squareup.wire.schema/EventListener.schemaHandlerStart|schemaHandlerStart(com.squareup.wire.schema.SchemaHandler;com.squareup.wire.schema.EmittingRules){}[0]
    open fun schemaHandlersEnd() // com.squareup.wire.schema/EventListener.schemaHandlersEnd|schemaHandlersEnd(){}[0]
    open fun schemaHandlersStart() // com.squareup.wire.schema/EventListener.schemaHandlersStart|schemaHandlersStart(){}[0]
    open fun treeShakeEnd(com.squareup.wire.schema/Schema, com.squareup.wire.schema/PruningRules) // com.squareup.wire.schema/EventListener.treeShakeEnd|treeShakeEnd(com.squareup.wire.schema.Schema;com.squareup.wire.schema.PruningRules){}[0]
    open fun treeShakeStart(com.squareup.wire.schema/Schema, com.squareup.wire.schema/PruningRules) // com.squareup.wire.schema/EventListener.treeShakeStart|treeShakeStart(com.squareup.wire.schema.Schema;com.squareup.wire.schema.PruningRules){}[0]
}
abstract class com.squareup.wire.schema/SchemaHandler { // com.squareup.wire.schema/SchemaHandler|null[0]
    abstract fun handle(com.squareup.wire.schema/Extend, com.squareup.wire.schema/Field, com.squareup.wire.schema/SchemaHandler.Context): okio/Path? // com.squareup.wire.schema/SchemaHandler.handle|handle(com.squareup.wire.schema.Extend;com.squareup.wire.schema.Field;com.squareup.wire.schema.SchemaHandler.Context){}[0]
    abstract fun handle(com.squareup.wire.schema/Service, com.squareup.wire.schema/SchemaHandler.Context): kotlin.collections/List<okio/Path> // com.squareup.wire.schema/SchemaHandler.handle|handle(com.squareup.wire.schema.Service;com.squareup.wire.schema.SchemaHandler.Context){}[0]
    abstract fun handle(com.squareup.wire.schema/Type, com.squareup.wire.schema/SchemaHandler.Context): okio/Path? // com.squareup.wire.schema/SchemaHandler.handle|handle(com.squareup.wire.schema.Type;com.squareup.wire.schema.SchemaHandler.Context){}[0]
    abstract interface Factory : com.squareup.wire.internal/Serializable { // com.squareup.wire.schema/SchemaHandler.Factory|null[0]
        abstract fun create(kotlin.collections/List<kotlin/String>, kotlin.collections/List<kotlin/String>, kotlin/Boolean, kotlin/String, kotlin.collections/Map<kotlin/String, kotlin/String>): com.squareup.wire.schema/SchemaHandler // com.squareup.wire.schema/SchemaHandler.Factory.create|create(kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.Boolean;kotlin.String;kotlin.collections.Map<kotlin.String,kotlin.String>){}[0]
    }
    constructor <init>() // com.squareup.wire.schema/SchemaHandler.<init>|<init>(){}[0]
    final class Context { // com.squareup.wire.schema/SchemaHandler.Context|null[0]
        constructor <init>(okio/FileSystem, okio/Path, com.squareup.wire/WireLogger, com.squareup.wire.schema/ErrorCollector =..., com.squareup.wire.schema/EmittingRules =..., com.squareup.wire.schema/ClaimedDefinitions? =..., com.squareup.wire.schema/ClaimedPaths =..., com.squareup.wire.schema/SchemaHandler.Module? =..., kotlin.collections/Set<kotlin/String>? =..., com.squareup.wire.schema/ProfileLoader? =...) // com.squareup.wire.schema/SchemaHandler.Context.<init>|<init>(okio.FileSystem;okio.Path;com.squareup.wire.WireLogger;com.squareup.wire.schema.ErrorCollector;com.squareup.wire.schema.EmittingRules;com.squareup.wire.schema.ClaimedDefinitions?;com.squareup.wire.schema.ClaimedPaths;com.squareup.wire.schema.SchemaHandler.Module?;kotlin.collections.Set<kotlin.String>?;com.squareup.wire.schema.ProfileLoader?){}[0]
        final fun component1(): okio/FileSystem // com.squareup.wire.schema/SchemaHandler.Context.component1|component1(){}[0]
        final fun component10(): com.squareup.wire.schema/ProfileLoader? // com.squareup.wire.schema/SchemaHandler.Context.component10|component10(){}[0]
        final fun component2(): okio/Path // com.squareup.wire.schema/SchemaHandler.Context.component2|component2(){}[0]
        final fun component3(): com.squareup.wire/WireLogger // com.squareup.wire.schema/SchemaHandler.Context.component3|component3(){}[0]
        final fun component4(): com.squareup.wire.schema/ErrorCollector // com.squareup.wire.schema/SchemaHandler.Context.component4|component4(){}[0]
        final fun component5(): com.squareup.wire.schema/EmittingRules // com.squareup.wire.schema/SchemaHandler.Context.component5|component5(){}[0]
        final fun component6(): com.squareup.wire.schema/ClaimedDefinitions? // com.squareup.wire.schema/SchemaHandler.Context.component6|component6(){}[0]
        final fun component7(): com.squareup.wire.schema/ClaimedPaths // com.squareup.wire.schema/SchemaHandler.Context.component7|component7(){}[0]
        final fun component8(): com.squareup.wire.schema/SchemaHandler.Module? // com.squareup.wire.schema/SchemaHandler.Context.component8|component8(){}[0]
        final fun component9(): kotlin.collections/Set<kotlin/String>? // com.squareup.wire.schema/SchemaHandler.Context.component9|component9(){}[0]
        final fun copy(okio/FileSystem =..., okio/Path =..., com.squareup.wire/WireLogger =..., com.squareup.wire.schema/ErrorCollector =..., com.squareup.wire.schema/EmittingRules =..., com.squareup.wire.schema/ClaimedDefinitions? =..., com.squareup.wire.schema/ClaimedPaths =..., com.squareup.wire.schema/SchemaHandler.Module? =..., kotlin.collections/Set<kotlin/String>? =..., com.squareup.wire.schema/ProfileLoader? =...): com.squareup.wire.schema/SchemaHandler.Context // com.squareup.wire.schema/SchemaHandler.Context.copy|copy(okio.FileSystem;okio.Path;com.squareup.wire.WireLogger;com.squareup.wire.schema.ErrorCollector;com.squareup.wire.schema.EmittingRules;com.squareup.wire.schema.ClaimedDefinitions?;com.squareup.wire.schema.ClaimedPaths;com.squareup.wire.schema.SchemaHandler.Module?;kotlin.collections.Set<kotlin.String>?;com.squareup.wire.schema.ProfileLoader?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/SchemaHandler.Context.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.squareup.wire.schema/SchemaHandler.Context.hashCode|hashCode(){}[0]
        final fun inSourcePath(com.squareup.wire.schema/Location): kotlin/Boolean // com.squareup.wire.schema/SchemaHandler.Context.inSourcePath|inSourcePath(com.squareup.wire.schema.Location){}[0]
        final fun inSourcePath(com.squareup.wire.schema/ProtoFile): kotlin/Boolean // com.squareup.wire.schema/SchemaHandler.Context.inSourcePath|inSourcePath(com.squareup.wire.schema.ProtoFile){}[0]
        final fun toString(): kotlin/String // com.squareup.wire.schema/SchemaHandler.Context.toString|toString(){}[0]
        final val claimedDefinitions // com.squareup.wire.schema/SchemaHandler.Context.claimedDefinitions|{}claimedDefinitions[0]
            final fun <get-claimedDefinitions>(): com.squareup.wire.schema/ClaimedDefinitions? // com.squareup.wire.schema/SchemaHandler.Context.claimedDefinitions.<get-claimedDefinitions>|<get-claimedDefinitions>(){}[0]
        final val claimedPaths // com.squareup.wire.schema/SchemaHandler.Context.claimedPaths|{}claimedPaths[0]
            final fun <get-claimedPaths>(): com.squareup.wire.schema/ClaimedPaths // com.squareup.wire.schema/SchemaHandler.Context.claimedPaths.<get-claimedPaths>|<get-claimedPaths>(){}[0]
        final val emittingRules // com.squareup.wire.schema/SchemaHandler.Context.emittingRules|{}emittingRules[0]
            final fun <get-emittingRules>(): com.squareup.wire.schema/EmittingRules // com.squareup.wire.schema/SchemaHandler.Context.emittingRules.<get-emittingRules>|<get-emittingRules>(){}[0]
        final val errorCollector // com.squareup.wire.schema/SchemaHandler.Context.errorCollector|{}errorCollector[0]
            final fun <get-errorCollector>(): com.squareup.wire.schema/ErrorCollector // com.squareup.wire.schema/SchemaHandler.Context.errorCollector.<get-errorCollector>|<get-errorCollector>(){}[0]
        final val fileSystem // com.squareup.wire.schema/SchemaHandler.Context.fileSystem|{}fileSystem[0]
            final fun <get-fileSystem>(): okio/FileSystem // com.squareup.wire.schema/SchemaHandler.Context.fileSystem.<get-fileSystem>|<get-fileSystem>(){}[0]
        final val logger // com.squareup.wire.schema/SchemaHandler.Context.logger|{}logger[0]
            final fun <get-logger>(): com.squareup.wire/WireLogger // com.squareup.wire.schema/SchemaHandler.Context.logger.<get-logger>|<get-logger>(){}[0]
        final val module // com.squareup.wire.schema/SchemaHandler.Context.module|<get-module>(){}[0]
            final fun <get-module>(): com.squareup.wire.schema/SchemaHandler.Module? // com.squareup.wire.schema/SchemaHandler.Context.module.<get-module>|<get-module>(){}[0]
        final val outDirectory // com.squareup.wire.schema/SchemaHandler.Context.outDirectory|{}outDirectory[0]
            final fun <get-outDirectory>(): okio/Path // com.squareup.wire.schema/SchemaHandler.Context.outDirectory.<get-outDirectory>|<get-outDirectory>(){}[0]
        final val profileLoader // com.squareup.wire.schema/SchemaHandler.Context.profileLoader|{}profileLoader[0]
            final fun <get-profileLoader>(): com.squareup.wire.schema/ProfileLoader? // com.squareup.wire.schema/SchemaHandler.Context.profileLoader.<get-profileLoader>|<get-profileLoader>(){}[0]
        final val sourcePathPaths // com.squareup.wire.schema/SchemaHandler.Context.sourcePathPaths|{}sourcePathPaths[0]
            final fun <get-sourcePathPaths>(): kotlin.collections/Set<kotlin/String>? // com.squareup.wire.schema/SchemaHandler.Context.sourcePathPaths.<get-sourcePathPaths>|<get-sourcePathPaths>(){}[0]
    }
    final class Module { // com.squareup.wire.schema/SchemaHandler.Module|null[0]
        constructor <init>(kotlin/String, kotlin.collections/Set<com.squareup.wire.schema/ProtoType>, kotlin.collections/Map<com.squareup.wire.schema/ProtoType, kotlin/String> =...) // com.squareup.wire.schema/SchemaHandler.Module.<init>|<init>(kotlin.String;kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Map<com.squareup.wire.schema.ProtoType,kotlin.String>){}[0]
        final fun component1(): kotlin/String // com.squareup.wire.schema/SchemaHandler.Module.component1|component1(){}[0]
        final fun component2(): kotlin.collections/Set<com.squareup.wire.schema/ProtoType> // com.squareup.wire.schema/SchemaHandler.Module.component2|component2(){}[0]
        final fun component3(): kotlin.collections/Map<com.squareup.wire.schema/ProtoType, kotlin/String> // com.squareup.wire.schema/SchemaHandler.Module.component3|component3(){}[0]
        final fun copy(kotlin/String =..., kotlin.collections/Set<com.squareup.wire.schema/ProtoType> =..., kotlin.collections/Map<com.squareup.wire.schema/ProtoType, kotlin/String> =...): com.squareup.wire.schema/SchemaHandler.Module // com.squareup.wire.schema/SchemaHandler.Module.copy|copy(kotlin.String;kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Map<com.squareup.wire.schema.ProtoType,kotlin.String>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/SchemaHandler.Module.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.squareup.wire.schema/SchemaHandler.Module.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.squareup.wire.schema/SchemaHandler.Module.toString|toString(){}[0]
        final val name // com.squareup.wire.schema/SchemaHandler.Module.name|{}name[0]
            final fun <get-name>(): kotlin/String // com.squareup.wire.schema/SchemaHandler.Module.name.<get-name>|<get-name>(){}[0]
        final val types // com.squareup.wire.schema/SchemaHandler.Module.types|<get-types>(){}[0]
            final fun <get-types>(): kotlin.collections/Set<com.squareup.wire.schema/ProtoType> // com.squareup.wire.schema/SchemaHandler.Module.types.<get-types>|<get-types>(){}[0]
        final val upstreamTypes // com.squareup.wire.schema/SchemaHandler.Module.upstreamTypes|{}upstreamTypes[0]
            final fun <get-upstreamTypes>(): kotlin.collections/Map<com.squareup.wire.schema/ProtoType, kotlin/String> // com.squareup.wire.schema/SchemaHandler.Module.upstreamTypes.<get-upstreamTypes>|<get-upstreamTypes>(){}[0]
    }
    final fun handle(com.squareup.wire.schema/ProtoFile, com.squareup.wire.schema/SchemaHandler.Context) // com.squareup.wire.schema/SchemaHandler.handle|handle(com.squareup.wire.schema.ProtoFile;com.squareup.wire.schema.SchemaHandler.Context){}[0]
    open fun handle(com.squareup.wire.schema/Schema, com.squareup.wire.schema/SchemaHandler.Context) // com.squareup.wire.schema/SchemaHandler.handle|handle(com.squareup.wire.schema.Schema;com.squareup.wire.schema.SchemaHandler.Context){}[0]
}
abstract class com.squareup.wire.schema/Target : com.squareup.wire.internal/Serializable { // com.squareup.wire.schema/Target|null[0]
    abstract fun copyTarget(kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<kotlin/String> =..., kotlin/Boolean =..., kotlin/String =...): com.squareup.wire.schema/Target // com.squareup.wire.schema/Target.copyTarget|copyTarget(kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.Boolean;kotlin.String){}[0]
    abstract fun newHandler(): com.squareup.wire.schema/SchemaHandler // com.squareup.wire.schema/Target.newHandler|newHandler(){}[0]
    abstract val excludes // com.squareup.wire.schema/Target.excludes|{}excludes[0]
        abstract fun <get-excludes>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/Target.excludes.<get-excludes>|<get-excludes>(){}[0]
    abstract val exclusive // com.squareup.wire.schema/Target.exclusive|{}exclusive[0]
        abstract fun <get-exclusive>(): kotlin/Boolean // com.squareup.wire.schema/Target.exclusive.<get-exclusive>|<get-exclusive>(){}[0]
    abstract val includes // com.squareup.wire.schema/Target.includes|{}includes[0]
        abstract fun <get-includes>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/Target.includes.<get-includes>|<get-includes>(){}[0]
    abstract val outDirectory // com.squareup.wire.schema/Target.outDirectory|{}outDirectory[0]
        abstract fun <get-outDirectory>(): kotlin/String // com.squareup.wire.schema/Target.outDirectory.<get-outDirectory>|<get-outDirectory>(){}[0]
    constructor <init>() // com.squareup.wire.schema/Target.<init>|<init>(){}[0]
}
abstract interface <#A: kotlin/Any> com.squareup.wire.schema.internal/MutableQueue : kotlin.collections/MutableCollection<#A> { // com.squareup.wire.schema.internal/MutableQueue|null[0]
    abstract fun poll(): #A? // com.squareup.wire.schema.internal/MutableQueue.poll|poll(){}[0]
}
abstract interface <#A: kotlin/Any?, #B: kotlin/Any?> com.squareup.wire.schema/Multimap { // com.squareup.wire.schema/Multimap|null[0]
    abstract fun asMap(): kotlin.collections/Map<#A, kotlin.collections/Collection<#B>> // com.squareup.wire.schema/Multimap.asMap|asMap(){}[0]
    abstract fun containsKey(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Multimap.containsKey|containsKey(kotlin.Any?){}[0]
    abstract fun containsValue(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Multimap.containsValue|containsValue(kotlin.Any?){}[0]
    abstract fun get(#A?): kotlin.collections/Collection<#B> // com.squareup.wire.schema/Multimap.get|get(1:0?){}[0]
    abstract fun isEmpty(): kotlin/Boolean // com.squareup.wire.schema/Multimap.isEmpty|isEmpty(){}[0]
    abstract fun size(): kotlin/Int // com.squareup.wire.schema/Multimap.size|size(){}[0]
    abstract fun values(): kotlin.collections/Collection<#B> // com.squareup.wire.schema/Multimap.values|values(){}[0]
}
abstract interface com.squareup.wire.schema.internal.parser/TypeElement { // com.squareup.wire.schema.internal.parser/TypeElement|null[0]
    abstract fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/TypeElement.toSchema|toSchema(){}[0]
    abstract val documentation // com.squareup.wire.schema.internal.parser/TypeElement.documentation|{}documentation[0]
        abstract fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/TypeElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    abstract val location // com.squareup.wire.schema.internal.parser/TypeElement.location|{}location[0]
        abstract fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/TypeElement.location.<get-location>|<get-location>(){}[0]
    abstract val name // com.squareup.wire.schema.internal.parser/TypeElement.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/TypeElement.name.<get-name>|<get-name>(){}[0]
    abstract val nestedTypes // com.squareup.wire.schema.internal.parser/TypeElement.nestedTypes|{}nestedTypes[0]
        abstract fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema.internal.parser/TypeElement.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    abstract val options // com.squareup.wire.schema.internal.parser/TypeElement.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/TypeElement.options.<get-options>|<get-options>(){}[0]
}
abstract interface com.squareup.wire.schema/Loader { // com.squareup.wire.schema/Loader|null[0]
    abstract fun load(kotlin/String): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/Loader.load|load(kotlin.String){}[0]
    abstract fun withErrors(com.squareup.wire.schema/ErrorCollector): com.squareup.wire.schema/Loader // com.squareup.wire.schema/Loader.withErrors|withErrors(com.squareup.wire.schema.ErrorCollector){}[0]
}
abstract interface com.squareup.wire.schema/ProfileLoader { // com.squareup.wire.schema/ProfileLoader|null[0]
    abstract fun loadProfile(kotlin/String, com.squareup.wire.schema/Schema): com.squareup.wire.schema/Profile // com.squareup.wire.schema/ProfileLoader.loadProfile|loadProfile(kotlin.String;com.squareup.wire.schema.Schema){}[0]
}
abstract interface com.squareup.wire.schema/SyntaxRules { // com.squareup.wire.schema/SyntaxRules|null[0]
    abstract fun getEncodeMode(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Field.Label?, kotlin/Boolean, kotlin/Boolean): com.squareup.wire.schema/Field.EncodeMode // com.squareup.wire.schema/SyntaxRules.getEncodeMode|getEncodeMode(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Field.Label?;kotlin.Boolean;kotlin.Boolean){}[0]
    abstract fun isPackedByDefault(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Field.Label?): kotlin/Boolean // com.squareup.wire.schema/SyntaxRules.isPackedByDefault|isPackedByDefault(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Field.Label?){}[0]
    abstract fun jsonName(kotlin/String, kotlin/String?): kotlin/String // com.squareup.wire.schema/SyntaxRules.jsonName|jsonName(kotlin.String;kotlin.String?){}[0]
    abstract fun validateDefaultValue(kotlin/Boolean, com.squareup.wire.schema/ErrorCollector) // com.squareup.wire.schema/SyntaxRules.validateDefaultValue|validateDefaultValue(kotlin.Boolean;com.squareup.wire.schema.ErrorCollector){}[0]
    abstract fun validateEnumConstants(kotlin.collections/List<com.squareup.wire.schema/EnumConstant>, com.squareup.wire.schema/ErrorCollector) // com.squareup.wire.schema/SyntaxRules.validateEnumConstants|validateEnumConstants(kotlin.collections.List<com.squareup.wire.schema.EnumConstant>;com.squareup.wire.schema.ErrorCollector){}[0]
    abstract fun validateExtension(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/ErrorCollector) // com.squareup.wire.schema/SyntaxRules.validateExtension|validateExtension(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.ErrorCollector){}[0]
    abstract fun validateTypeReference(com.squareup.wire.schema/Type?, com.squareup.wire.schema/ErrorCollector) // com.squareup.wire.schema/SyntaxRules.validateTypeReference|validateTypeReference(com.squareup.wire.schema.Type?;com.squareup.wire.schema.ErrorCollector){}[0]
    final object Companion { // com.squareup.wire.schema/SyntaxRules.Companion|null[0]
        final fun get(com.squareup.wire/Syntax?): com.squareup.wire.schema/SyntaxRules // com.squareup.wire.schema/SyntaxRules.Companion.get|get(com.squareup.wire.Syntax?){}[0]
    }
}
abstract interface com.squareup.wire/WireLogger { // com.squareup.wire/WireLogger|null[0]
    abstract fun artifactHandled(okio/Path, kotlin/String, kotlin/String) // com.squareup.wire/WireLogger.artifactHandled|artifactHandled(okio.Path;kotlin.String;kotlin.String){}[0]
    abstract fun artifactSkipped(com.squareup.wire.schema/ProtoType, kotlin/String) // com.squareup.wire/WireLogger.artifactSkipped|artifactSkipped(com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
    abstract fun interface Factory : com.squareup.wire.internal/Serializable { // com.squareup.wire/WireLogger.Factory|null[0]
        abstract fun create(): com.squareup.wire/WireLogger // com.squareup.wire/WireLogger.Factory.create|create(){}[0]
    }
    abstract fun unusedExcludesInTarget(kotlin.collections/Set<kotlin/String>) // com.squareup.wire/WireLogger.unusedExcludesInTarget|unusedExcludesInTarget(kotlin.collections.Set<kotlin.String>){}[0]
    abstract fun unusedIncludesInTarget(kotlin.collections/Set<kotlin/String>) // com.squareup.wire/WireLogger.unusedIncludesInTarget|unusedIncludesInTarget(kotlin.collections.Set<kotlin.String>){}[0]
    abstract fun unusedPrunes(kotlin.collections/Set<kotlin/String>) // com.squareup.wire/WireLogger.unusedPrunes|unusedPrunes(kotlin.collections.Set<kotlin.String>){}[0]
    abstract fun unusedRoots(kotlin.collections/Set<kotlin/String>) // com.squareup.wire/WireLogger.unusedRoots|unusedRoots(kotlin.collections.Set<kotlin.String>){}[0]
    final object Companion { // com.squareup.wire/WireLogger.Companion|null[0]
        final val NONE // com.squareup.wire/WireLogger.Companion.NONE|{}NONE[0]
            final fun <get-NONE>(): com.squareup.wire/WireLogger // com.squareup.wire/WireLogger.Companion.NONE.<get-NONE>|<get-NONE>(){}[0]
    }
}
final class <#A: kotlin/Any?> com.squareup.wire.schema.internal/DagChecker { // com.squareup.wire.schema.internal/DagChecker|null[0]
    constructor <init>(kotlin.collections/Iterable<#A>, kotlin/Function1<#A, kotlin.collections/Iterable<#A>>) // com.squareup.wire.schema.internal/DagChecker.<init>|<init>(kotlin.collections.Iterable<1:0>;kotlin.Function1<1:0,kotlin.collections.Iterable<1:0>>){}[0]
    final fun check(): kotlin.collections/Set<kotlin.collections/List<#A>> // com.squareup.wire.schema.internal/DagChecker.check|check(){}[0]
}
final class com.squareup.wire.schema.internal.parser/EnumConstantElement { // com.squareup.wire.schema.internal.parser/EnumConstantElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/Int, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...) // com.squareup.wire.schema.internal.parser/EnumConstantElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.Int;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/EnumConstantElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumConstantElement.component2|component2(){}[0]
    final fun component3(): kotlin/Int // com.squareup.wire.schema.internal.parser/EnumConstantElement.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumConstantElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/EnumConstantElement.component5|component5(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/Int =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...): com.squareup.wire.schema.internal.parser/EnumConstantElement // com.squareup.wire.schema.internal.parser/EnumConstantElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.Int;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/EnumConstantElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/EnumConstantElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumConstantElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumConstantElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/EnumConstantElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumConstantElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/EnumConstantElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/EnumConstantElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/EnumConstantElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumConstantElement.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/EnumConstantElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/EnumConstantElement.options.<get-options>|<get-options>(){}[0]
    final val tag // com.squareup.wire.schema.internal.parser/EnumConstantElement.tag|{}tag[0]
        final fun <get-tag>(): kotlin/Int // com.squareup.wire.schema.internal.parser/EnumConstantElement.tag.<get-tag>|<get-tag>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/EnumElement : com.squareup.wire.schema.internal.parser/TypeElement { // com.squareup.wire.schema.internal.parser/EnumElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/EnumConstantElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> =...) // com.squareup.wire.schema.internal.parser/EnumElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.EnumConstantElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ReservedElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/EnumElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/EnumElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/EnumConstantElement> // com.squareup.wire.schema.internal.parser/EnumElement.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> // com.squareup.wire.schema.internal.parser/EnumElement.component6|component6(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/EnumConstantElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> =...): com.squareup.wire.schema.internal.parser/EnumElement // com.squareup.wire.schema.internal.parser/EnumElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.EnumConstantElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ReservedElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/EnumElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/EnumElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumElement.toString|toString(){}[0]
    final val constants // com.squareup.wire.schema.internal.parser/EnumElement.constants|{}constants[0]
        final fun <get-constants>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/EnumConstantElement> // com.squareup.wire.schema.internal.parser/EnumElement.constants.<get-constants>|<get-constants>(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/EnumElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/EnumElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/EnumElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/EnumElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/EnumElement.name.<get-name>|<get-name>(){}[0]
    final val nestedTypes // com.squareup.wire.schema.internal.parser/EnumElement.nestedTypes|{}nestedTypes[0]
        final fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema.internal.parser/EnumElement.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/EnumElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/EnumElement.options.<get-options>|<get-options>(){}[0]
    final val reserveds // com.squareup.wire.schema.internal.parser/EnumElement.reserveds|{}reserveds[0]
        final fun <get-reserveds>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> // com.squareup.wire.schema.internal.parser/EnumElement.reserveds.<get-reserveds>|<get-reserveds>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/ExtendElement { // com.squareup.wire.schema.internal.parser/ExtendElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =...) // com.squareup.wire.schema.internal.parser/ExtendElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ExtendElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtendElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtendElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/ExtendElement.component4|component4(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =...): com.squareup.wire.schema.internal.parser/ExtendElement // com.squareup.wire.schema.internal.parser/ExtendElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/ExtendElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/ExtendElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtendElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtendElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/ExtendElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtendElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val fields // com.squareup.wire.schema.internal.parser/ExtendElement.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/ExtendElement.fields.<get-fields>|<get-fields>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/ExtendElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ExtendElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/ExtendElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtendElement.name.<get-name>|<get-name>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/ExtensionsElement { // com.squareup.wire.schema.internal.parser/ExtensionsElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String =..., kotlin.collections/List<kotlin/Any>, kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...) // com.squareup.wire.schema.internal.parser/ExtensionsElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ExtensionsElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtensionsElement.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema.internal.parser/ExtensionsElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/ExtensionsElement.component4|component4(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin.collections/List<kotlin/Any> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...): com.squareup.wire.schema.internal.parser/ExtensionsElement // com.squareup.wire.schema.internal.parser/ExtensionsElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/ExtensionsElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/ExtensionsElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtensionsElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtensionsElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/ExtensionsElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/ExtensionsElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/ExtensionsElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ExtensionsElement.location.<get-location>|<get-location>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/ExtensionsElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/ExtensionsElement.options.<get-options>|<get-options>(){}[0]
    final val values // com.squareup.wire.schema.internal.parser/ExtensionsElement.values|{}values[0]
        final fun <get-values>(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema.internal.parser/ExtensionsElement.values.<get-values>|<get-values>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/FieldElement { // com.squareup.wire.schema.internal.parser/FieldElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, com.squareup.wire.schema/Field.Label? =..., kotlin/String, kotlin/String, kotlin/String? =..., kotlin/String? =..., kotlin/Int =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...) // com.squareup.wire.schema.internal.parser/FieldElement.<init>|<init>(com.squareup.wire.schema.Location;com.squareup.wire.schema.Field.Label?;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.Int;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/FieldElement.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema/Field.Label? // com.squareup.wire.schema.internal.parser/FieldElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.component4|component4(){}[0]
    final fun component5(): kotlin/String? // com.squareup.wire.schema.internal.parser/FieldElement.component5|component5(){}[0]
    final fun component6(): kotlin/String? // com.squareup.wire.schema.internal.parser/FieldElement.component6|component6(){}[0]
    final fun component7(): kotlin/Int // com.squareup.wire.schema.internal.parser/FieldElement.component7|component7(){}[0]
    final fun component8(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/FieldElement.component9|component9(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., com.squareup.wire.schema/Field.Label? =..., kotlin/String =..., kotlin/String =..., kotlin/String? =..., kotlin/String? =..., kotlin/Int =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...): com.squareup.wire.schema.internal.parser/FieldElement // com.squareup.wire.schema.internal.parser/FieldElement.copy|copy(com.squareup.wire.schema.Location;com.squareup.wire.schema.Field.Label?;kotlin.String;kotlin.String;kotlin.String?;kotlin.String?;kotlin.Int;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/FieldElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/FieldElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.toString|toString(){}[0]
    final val defaultValue // com.squareup.wire.schema.internal.parser/FieldElement.defaultValue|{}defaultValue[0]
        final fun <get-defaultValue>(): kotlin/String? // com.squareup.wire.schema.internal.parser/FieldElement.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/FieldElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val jsonName // com.squareup.wire.schema.internal.parser/FieldElement.jsonName|{}jsonName[0]
        final fun <get-jsonName>(): kotlin/String? // com.squareup.wire.schema.internal.parser/FieldElement.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
    final val label // com.squareup.wire.schema.internal.parser/FieldElement.label|{}label[0]
        final fun <get-label>(): com.squareup.wire.schema/Field.Label? // com.squareup.wire.schema.internal.parser/FieldElement.label.<get-label>|<get-label>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/FieldElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/FieldElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/FieldElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/FieldElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/FieldElement.options.<get-options>|<get-options>(){}[0]
    final val tag // com.squareup.wire.schema.internal.parser/FieldElement.tag|{}tag[0]
        final fun <get-tag>(): kotlin/Int // com.squareup.wire.schema.internal.parser/FieldElement.tag.<get-tag>|<get-tag>(){}[0]
    final val type // com.squareup.wire.schema.internal.parser/FieldElement.type|{}type[0]
        final fun <get-type>(): kotlin/String // com.squareup.wire.schema.internal.parser/FieldElement.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/GroupElement { // com.squareup.wire.schema.internal.parser/GroupElement|null[0]
    constructor <init>(com.squareup.wire.schema/Field.Label? =..., com.squareup.wire.schema/Location, kotlin/String, kotlin/Int, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =...) // com.squareup.wire.schema.internal.parser/GroupElement.<init>|<init>(com.squareup.wire.schema.Field.Label?;com.squareup.wire.schema.Location;kotlin.String;kotlin.Int;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Field.Label? // com.squareup.wire.schema.internal.parser/GroupElement.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/GroupElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/GroupElement.component3|component3(){}[0]
    final fun component4(): kotlin/Int // com.squareup.wire.schema.internal.parser/GroupElement.component4|component4(){}[0]
    final fun component5(): kotlin/String // com.squareup.wire.schema.internal.parser/GroupElement.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/GroupElement.component6|component6(){}[0]
    final fun copy(com.squareup.wire.schema/Field.Label? =..., com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/Int =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =...): com.squareup.wire.schema.internal.parser/GroupElement // com.squareup.wire.schema.internal.parser/GroupElement.copy|copy(com.squareup.wire.schema.Field.Label?;com.squareup.wire.schema.Location;kotlin.String;kotlin.Int;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/GroupElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/GroupElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/GroupElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/GroupElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/GroupElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/GroupElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val fields // com.squareup.wire.schema.internal.parser/GroupElement.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/GroupElement.fields.<get-fields>|<get-fields>(){}[0]
    final val label // com.squareup.wire.schema.internal.parser/GroupElement.label|{}label[0]
        final fun <get-label>(): com.squareup.wire.schema/Field.Label? // com.squareup.wire.schema.internal.parser/GroupElement.label.<get-label>|<get-label>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/GroupElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/GroupElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/GroupElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/GroupElement.name.<get-name>|<get-name>(){}[0]
    final val tag // com.squareup.wire.schema.internal.parser/GroupElement.tag|{}tag[0]
        final fun <get-tag>(): kotlin/Int // com.squareup.wire.schema.internal.parser/GroupElement.tag.<get-tag>|<get-tag>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/MessageElement : com.squareup.wire.schema.internal.parser/TypeElement { // com.squareup.wire.schema.internal.parser/MessageElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OneOfElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtensionsElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> =...) // com.squareup.wire.schema.internal.parser/MessageElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.TypeElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ReservedElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OneOfElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtensionsElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.GroupElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtendElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/MessageElement.component1|component1(){}[0]
    final fun component10(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> // com.squareup.wire.schema.internal.parser/MessageElement.component10|component10(){}[0]
    final fun component11(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> // com.squareup.wire.schema.internal.parser/MessageElement.component11|component11(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/MessageElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/MessageElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema.internal.parser/MessageElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/MessageElement.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> // com.squareup.wire.schema.internal.parser/MessageElement.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/MessageElement.component7|component7(){}[0]
    final fun component8(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OneOfElement> // com.squareup.wire.schema.internal.parser/MessageElement.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtensionsElement> // com.squareup.wire.schema.internal.parser/MessageElement.component9|component9(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OneOfElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtensionsElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> =...): com.squareup.wire.schema.internal.parser/MessageElement // com.squareup.wire.schema.internal.parser/MessageElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.TypeElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ReservedElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OneOfElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtensionsElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.GroupElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtendElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/MessageElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/MessageElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/MessageElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/MessageElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/MessageElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/MessageElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val extendDeclarations // com.squareup.wire.schema.internal.parser/MessageElement.extendDeclarations|{}extendDeclarations[0]
        final fun <get-extendDeclarations>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> // com.squareup.wire.schema.internal.parser/MessageElement.extendDeclarations.<get-extendDeclarations>|<get-extendDeclarations>(){}[0]
    final val extensions // com.squareup.wire.schema.internal.parser/MessageElement.extensions|{}extensions[0]
        final fun <get-extensions>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtensionsElement> // com.squareup.wire.schema.internal.parser/MessageElement.extensions.<get-extensions>|<get-extensions>(){}[0]
    final val fields // com.squareup.wire.schema.internal.parser/MessageElement.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/MessageElement.fields.<get-fields>|<get-fields>(){}[0]
    final val groups // com.squareup.wire.schema.internal.parser/MessageElement.groups|{}groups[0]
        final fun <get-groups>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> // com.squareup.wire.schema.internal.parser/MessageElement.groups.<get-groups>|<get-groups>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/MessageElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/MessageElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/MessageElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/MessageElement.name.<get-name>|<get-name>(){}[0]
    final val nestedTypes // com.squareup.wire.schema.internal.parser/MessageElement.nestedTypes|{}nestedTypes[0]
        final fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema.internal.parser/MessageElement.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    final val oneOfs // com.squareup.wire.schema.internal.parser/MessageElement.oneOfs|{}oneOfs[0]
        final fun <get-oneOfs>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OneOfElement> // com.squareup.wire.schema.internal.parser/MessageElement.oneOfs.<get-oneOfs>|<get-oneOfs>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/MessageElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/MessageElement.options.<get-options>|<get-options>(){}[0]
    final val reserveds // com.squareup.wire.schema.internal.parser/MessageElement.reserveds|{}reserveds[0]
        final fun <get-reserveds>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> // com.squareup.wire.schema.internal.parser/MessageElement.reserveds.<get-reserveds>|<get-reserveds>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/OneOfElement { // com.squareup.wire.schema.internal.parser/OneOfElement|null[0]
    constructor <init>(kotlin/String, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., com.squareup.wire.schema/Location) // com.squareup.wire.schema.internal.parser/OneOfElement.<init>|<init>(kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.GroupElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;com.squareup.wire.schema.Location){}[0]
    final fun component1(): kotlin/String // com.squareup.wire.schema.internal.parser/OneOfElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/OneOfElement.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/OneOfElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> // com.squareup.wire.schema.internal.parser/OneOfElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/OneOfElement.component5|component5(){}[0]
    final fun component6(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/OneOfElement.component6|component6(){}[0]
    final fun copy(kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., com.squareup.wire.schema/Location =...): com.squareup.wire.schema.internal.parser/OneOfElement // com.squareup.wire.schema.internal.parser/OneOfElement.copy|copy(kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.GroupElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;com.squareup.wire.schema.Location){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/OneOfElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/OneOfElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/OneOfElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/OneOfElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/OneOfElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/OneOfElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val fields // com.squareup.wire.schema.internal.parser/OneOfElement.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema.internal.parser/OneOfElement.fields.<get-fields>|<get-fields>(){}[0]
    final val groups // com.squareup.wire.schema.internal.parser/OneOfElement.groups|{}groups[0]
        final fun <get-groups>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/GroupElement> // com.squareup.wire.schema.internal.parser/OneOfElement.groups.<get-groups>|<get-groups>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/OneOfElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/OneOfElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/OneOfElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/OneOfElement.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/OneOfElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/OneOfElement.options.<get-options>|<get-options>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/OptionElement { // com.squareup.wire.schema.internal.parser/OptionElement|null[0]
    constructor <init>(kotlin/String, com.squareup.wire.schema.internal.parser/OptionElement.Kind, kotlin/Any, kotlin/Boolean) // com.squareup.wire.schema.internal.parser/OptionElement.<init>|<init>(kotlin.String;com.squareup.wire.schema.internal.parser.OptionElement.Kind;kotlin.Any;kotlin.Boolean){}[0]
    final class OptionPrimitive { // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive|null[0]
        constructor <init>(com.squareup.wire.schema.internal.parser/OptionElement.Kind, kotlin/Any) // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.<init>|<init>(com.squareup.wire.schema.internal.parser.OptionElement.Kind;kotlin.Any){}[0]
        final fun component1(): com.squareup.wire.schema.internal.parser/OptionElement.Kind // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.component1|component1(){}[0]
        final fun component2(): kotlin/Any // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.component2|component2(){}[0]
        final fun copy(com.squareup.wire.schema.internal.parser/OptionElement.Kind =..., kotlin/Any =...): com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.copy|copy(com.squareup.wire.schema.internal.parser.OptionElement.Kind;kotlin.Any){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.toString|toString(){}[0]
        final val kind // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.kind|{}kind[0]
            final fun <get-kind>(): com.squareup.wire.schema.internal.parser/OptionElement.Kind // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.kind.<get-kind>|<get-kind>(){}[0]
        final val value // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.value|{}value[0]
            final fun <get-value>(): kotlin/Any // com.squareup.wire.schema.internal.parser/OptionElement.OptionPrimitive.value.<get-value>|<get-value>(){}[0]
    }
    final enum class Kind : kotlin/Enum<com.squareup.wire.schema.internal.parser/OptionElement.Kind> { // com.squareup.wire.schema.internal.parser/OptionElement.Kind|null[0]
        enum entry BOOLEAN // com.squareup.wire.schema.internal.parser/OptionElement.Kind.BOOLEAN|null[0]
        enum entry ENUM // com.squareup.wire.schema.internal.parser/OptionElement.Kind.ENUM|null[0]
        enum entry LIST // com.squareup.wire.schema.internal.parser/OptionElement.Kind.LIST|null[0]
        enum entry MAP // com.squareup.wire.schema.internal.parser/OptionElement.Kind.MAP|null[0]
        enum entry NUMBER // com.squareup.wire.schema.internal.parser/OptionElement.Kind.NUMBER|null[0]
        enum entry OPTION // com.squareup.wire.schema.internal.parser/OptionElement.Kind.OPTION|null[0]
        enum entry STRING // com.squareup.wire.schema.internal.parser/OptionElement.Kind.STRING|null[0]
        final fun valueOf(kotlin/String): com.squareup.wire.schema.internal.parser/OptionElement.Kind // com.squareup.wire.schema.internal.parser/OptionElement.Kind.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.squareup.wire.schema.internal.parser/OptionElement.Kind> // com.squareup.wire.schema.internal.parser/OptionElement.Kind.values|values#static(){}[0]
        final val entries // com.squareup.wire.schema.internal.parser/OptionElement.Kind.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.squareup.wire.schema.internal.parser/OptionElement.Kind> // com.squareup.wire.schema.internal.parser/OptionElement.Kind.entries.<get-entries>|<get-entries>#static(){}[0]
    }
    final fun component1(): kotlin/String // com.squareup.wire.schema.internal.parser/OptionElement.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema.internal.parser/OptionElement.Kind // com.squareup.wire.schema.internal.parser/OptionElement.component2|component2(){}[0]
    final fun component3(): kotlin/Any // com.squareup.wire.schema.internal.parser/OptionElement.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/OptionElement.component4|component4(){}[0]
    final fun copy(kotlin/String =..., com.squareup.wire.schema.internal.parser/OptionElement.Kind =..., kotlin/Any =..., kotlin/Boolean =...): com.squareup.wire.schema.internal.parser/OptionElement // com.squareup.wire.schema.internal.parser/OptionElement.copy|copy(kotlin.String;com.squareup.wire.schema.internal.parser.OptionElement.Kind;kotlin.Any;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/OptionElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/OptionElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/OptionElement.toSchema|toSchema(){}[0]
    final fun toSchemaDeclaration(): kotlin/String // com.squareup.wire.schema.internal.parser/OptionElement.toSchemaDeclaration|toSchemaDeclaration(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/OptionElement.toString|toString(){}[0]
    final object Companion { // com.squareup.wire.schema.internal.parser/OptionElement.Companion|null[0]
        final fun create(kotlin/String, com.squareup.wire.schema.internal.parser/OptionElement.Kind, kotlin/Any, kotlin/Boolean =...): com.squareup.wire.schema.internal.parser/OptionElement // com.squareup.wire.schema.internal.parser/OptionElement.Companion.create|create(kotlin.String;com.squareup.wire.schema.internal.parser.OptionElement.Kind;kotlin.Any;kotlin.Boolean){}[0]
    }
    final val isParenthesized // com.squareup.wire.schema.internal.parser/OptionElement.isParenthesized|{}isParenthesized[0]
        final fun <get-isParenthesized>(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/OptionElement.isParenthesized.<get-isParenthesized>|<get-isParenthesized>(){}[0]
    final val kind // com.squareup.wire.schema.internal.parser/OptionElement.kind|{}kind[0]
        final fun <get-kind>(): com.squareup.wire.schema.internal.parser/OptionElement.Kind // com.squareup.wire.schema.internal.parser/OptionElement.kind.<get-kind>|<get-kind>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/OptionElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/OptionElement.name.<get-name>|<get-name>(){}[0]
    final val value // com.squareup.wire.schema.internal.parser/OptionElement.value|{}value[0]
        final fun <get-value>(): kotlin/Any // com.squareup.wire.schema.internal.parser/OptionElement.value.<get-value>|<get-value>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/OptionReader { // com.squareup.wire.schema.internal.parser/OptionReader|null[0]
    constructor <init>(com.squareup.wire.schema.internal.parser/SyntaxReader) // com.squareup.wire.schema.internal.parser/OptionReader.<init>|<init>(com.squareup.wire.schema.internal.parser.SyntaxReader){}[0]
    final fun readOption(kotlin/Char): com.squareup.wire.schema.internal.parser/OptionElement // com.squareup.wire.schema.internal.parser/OptionReader.readOption|readOption(kotlin.Char){}[0]
    final fun readOptions(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/OptionReader.readOptions|readOptions(){}[0]
}
final class com.squareup.wire.schema.internal.parser/ProtoFileElement { // com.squareup.wire.schema.internal.parser/ProtoFileElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String? =..., com.squareup.wire/Syntax? =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ServiceElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...) // com.squareup.wire.schema.internal.parser/ProtoFileElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String?;com.squareup.wire.Syntax?;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.TypeElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ServiceElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtendElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ProtoFileElement.component1|component1(){}[0]
    final fun component2(): kotlin/String? // com.squareup.wire.schema.internal.parser/ProtoFileElement.component2|component2(){}[0]
    final fun component3(): com.squareup.wire/Syntax? // com.squareup.wire.schema.internal.parser/ProtoFileElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema.internal.parser/ProtoFileElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema.internal.parser/ProtoFileElement.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ServiceElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.component7|component7(){}[0]
    final fun component8(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.component9|component9(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String? =..., com.squareup.wire/Syntax? =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ServiceElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...): com.squareup.wire.schema.internal.parser/ProtoFileElement // com.squareup.wire.schema.internal.parser/ProtoFileElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String?;com.squareup.wire.Syntax?;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.TypeElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ServiceElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtendElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/ProtoFileElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/ProtoFileElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/ProtoFileElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/ProtoFileElement.toString|toString(){}[0]
    final object Companion { // com.squareup.wire.schema.internal.parser/ProtoFileElement.Companion|null[0]
        final fun empty(kotlin/String): com.squareup.wire.schema.internal.parser/ProtoFileElement // com.squareup.wire.schema.internal.parser/ProtoFileElement.Companion.empty|empty(kotlin.String){}[0]
    }
    final val extendDeclarations // com.squareup.wire.schema.internal.parser/ProtoFileElement.extendDeclarations|{}extendDeclarations[0]
        final fun <get-extendDeclarations>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.extendDeclarations.<get-extendDeclarations>|<get-extendDeclarations>(){}[0]
    final val imports // com.squareup.wire.schema.internal.parser/ProtoFileElement.imports|{}imports[0]
        final fun <get-imports>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema.internal.parser/ProtoFileElement.imports.<get-imports>|<get-imports>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/ProtoFileElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ProtoFileElement.location.<get-location>|<get-location>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/ProtoFileElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.options.<get-options>|<get-options>(){}[0]
    final val packageName // com.squareup.wire.schema.internal.parser/ProtoFileElement.packageName|{}packageName[0]
        final fun <get-packageName>(): kotlin/String? // com.squareup.wire.schema.internal.parser/ProtoFileElement.packageName.<get-packageName>|<get-packageName>(){}[0]
    final val publicImports // com.squareup.wire.schema.internal.parser/ProtoFileElement.publicImports|{}publicImports[0]
        final fun <get-publicImports>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema.internal.parser/ProtoFileElement.publicImports.<get-publicImports>|<get-publicImports>(){}[0]
    final val services // com.squareup.wire.schema.internal.parser/ProtoFileElement.services|{}services[0]
        final fun <get-services>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ServiceElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.services.<get-services>|<get-services>(){}[0]
    final val syntax // com.squareup.wire.schema.internal.parser/ProtoFileElement.syntax|{}syntax[0]
        final fun <get-syntax>(): com.squareup.wire/Syntax? // com.squareup.wire.schema.internal.parser/ProtoFileElement.syntax.<get-syntax>|<get-syntax>(){}[0]
    final val types // com.squareup.wire.schema.internal.parser/ProtoFileElement.types|{}types[0]
        final fun <get-types>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema.internal.parser/ProtoFileElement.types.<get-types>|<get-types>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/ProtoParser { // com.squareup.wire.schema.internal.parser/ProtoParser|null[0]
    final fun readProtoFile(): com.squareup.wire.schema.internal.parser/ProtoFileElement // com.squareup.wire.schema.internal.parser/ProtoParser.readProtoFile|readProtoFile(){}[0]
    final object Companion { // com.squareup.wire.schema.internal.parser/ProtoParser.Companion|null[0]
        final fun parse(com.squareup.wire.schema/Location, kotlin/String): com.squareup.wire.schema.internal.parser/ProtoFileElement // com.squareup.wire.schema.internal.parser/ProtoParser.Companion.parse|parse(com.squareup.wire.schema.Location;kotlin.String){}[0]
    }
}
final class com.squareup.wire.schema.internal.parser/ReservedElement { // com.squareup.wire.schema.internal.parser/ReservedElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String =..., kotlin.collections/List<kotlin/Any>) // com.squareup.wire.schema.internal.parser/ReservedElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ReservedElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/ReservedElement.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema.internal.parser/ReservedElement.component3|component3(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin.collections/List<kotlin/Any> =...): com.squareup.wire.schema.internal.parser/ReservedElement // com.squareup.wire.schema.internal.parser/ReservedElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/ReservedElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/ReservedElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/ReservedElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/ReservedElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/ReservedElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/ReservedElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/ReservedElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ReservedElement.location.<get-location>|<get-location>(){}[0]
    final val values // com.squareup.wire.schema.internal.parser/ReservedElement.values|{}values[0]
        final fun <get-values>(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema.internal.parser/ReservedElement.values.<get-values>|<get-values>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/RpcElement { // com.squareup.wire.schema.internal.parser/RpcElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String =..., kotlin/String, kotlin/String, kotlin/Boolean =..., kotlin/Boolean =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...) // com.squareup.wire.schema.internal.parser/RpcElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/RpcElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.component4|component4(){}[0]
    final fun component5(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.component5|component5(){}[0]
    final fun component6(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/RpcElement.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/RpcElement.component7|component7(){}[0]
    final fun component8(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/RpcElement.component8|component8(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin/String =..., kotlin/String =..., kotlin/Boolean =..., kotlin/Boolean =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...): com.squareup.wire.schema.internal.parser/RpcElement // com.squareup.wire.schema.internal.parser/RpcElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.Boolean;kotlin.Boolean;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/RpcElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/RpcElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/RpcElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/RpcElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/RpcElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/RpcElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/RpcElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/RpcElement.options.<get-options>|<get-options>(){}[0]
    final val requestStreaming // com.squareup.wire.schema.internal.parser/RpcElement.requestStreaming|{}requestStreaming[0]
        final fun <get-requestStreaming>(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/RpcElement.requestStreaming.<get-requestStreaming>|<get-requestStreaming>(){}[0]
    final val requestType // com.squareup.wire.schema.internal.parser/RpcElement.requestType|{}requestType[0]
        final fun <get-requestType>(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.requestType.<get-requestType>|<get-requestType>(){}[0]
    final val responseStreaming // com.squareup.wire.schema.internal.parser/RpcElement.responseStreaming|{}responseStreaming[0]
        final fun <get-responseStreaming>(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/RpcElement.responseStreaming.<get-responseStreaming>|<get-responseStreaming>(){}[0]
    final val responseType // com.squareup.wire.schema.internal.parser/RpcElement.responseType|{}responseType[0]
        final fun <get-responseType>(): kotlin/String // com.squareup.wire.schema.internal.parser/RpcElement.responseType.<get-responseType>|<get-responseType>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/ServiceElement { // com.squareup.wire.schema.internal.parser/ServiceElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/RpcElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...) // com.squareup.wire.schema.internal.parser/ServiceElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.RpcElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ServiceElement.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema.internal.parser/ServiceElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal.parser/ServiceElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/RpcElement> // com.squareup.wire.schema.internal.parser/ServiceElement.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/ServiceElement.component5|component5(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/RpcElement> =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =...): com.squareup.wire.schema.internal.parser/ServiceElement // com.squareup.wire.schema.internal.parser/ServiceElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.RpcElement>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal.parser/ServiceElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal.parser/ServiceElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal.parser/ServiceElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal.parser/ServiceElement.toString|toString(){}[0]
    final val documentation // com.squareup.wire.schema.internal.parser/ServiceElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal.parser/ServiceElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal.parser/ServiceElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/ServiceElement.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema.internal.parser/ServiceElement.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema.internal.parser/ServiceElement.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema.internal.parser/ServiceElement.options|{}options[0]
        final fun <get-options>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal.parser/ServiceElement.options.<get-options>|<get-options>(){}[0]
    final val rpcs // com.squareup.wire.schema.internal.parser/ServiceElement.rpcs|{}rpcs[0]
        final fun <get-rpcs>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/RpcElement> // com.squareup.wire.schema.internal.parser/ServiceElement.rpcs.<get-rpcs>|<get-rpcs>(){}[0]
}
final class com.squareup.wire.schema.internal.parser/SyntaxReader { // com.squareup.wire.schema.internal.parser/SyntaxReader|null[0]
    constructor <init>(kotlin/CharArray, com.squareup.wire.schema/Location) // com.squareup.wire.schema.internal.parser/SyntaxReader.<init>|<init>(kotlin.CharArray;com.squareup.wire.schema.Location){}[0]
    final fun exhausted(): kotlin/Boolean // com.squareup.wire.schema.internal.parser/SyntaxReader.exhausted|exhausted(){}[0]
    final fun location(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal.parser/SyntaxReader.location|location(){}[0]
    final fun peekChar(): kotlin/Char // com.squareup.wire.schema.internal.parser/SyntaxReader.peekChar|peekChar(){}[0]
    final fun peekChar(kotlin/Char): kotlin/Boolean // com.squareup.wire.schema.internal.parser/SyntaxReader.peekChar|peekChar(kotlin.Char){}[0]
    final fun pushBack(kotlin/Char) // com.squareup.wire.schema.internal.parser/SyntaxReader.pushBack|pushBack(kotlin.Char){}[0]
    final fun readChar(): kotlin/Char // com.squareup.wire.schema.internal.parser/SyntaxReader.readChar|readChar(){}[0]
    final fun readDataType(): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readDataType|readDataType(){}[0]
    final fun readDataType(kotlin/String): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readDataType|readDataType(kotlin.String){}[0]
    final fun readDocumentation(): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readDocumentation|readDocumentation(){}[0]
    final fun readInt(): kotlin/Int // com.squareup.wire.schema.internal.parser/SyntaxReader.readInt|readInt(){}[0]
    final fun readName(kotlin/Boolean =..., kotlin/Boolean =...): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readName|readName(kotlin.Boolean;kotlin.Boolean){}[0]
    final fun readQuotedString(): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readQuotedString|readQuotedString(){}[0]
    final fun readString(): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readString|readString(){}[0]
    final fun readWord(kotlin/Boolean =...): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.readWord|readWord(kotlin.Boolean){}[0]
    final fun require(kotlin/Char) // com.squareup.wire.schema.internal.parser/SyntaxReader.require|require(kotlin.Char){}[0]
    final fun tryAppendTrailingDocumentation(kotlin/String): kotlin/String // com.squareup.wire.schema.internal.parser/SyntaxReader.tryAppendTrailingDocumentation|tryAppendTrailingDocumentation(kotlin.String){}[0]
    final fun unexpected(kotlin/String, com.squareup.wire.schema/Location? =...): kotlin/RuntimeException // com.squareup.wire.schema.internal.parser/SyntaxReader.unexpected|unexpected(kotlin.String;com.squareup.wire.schema.Location?){}[0]
    final inline fun expect(kotlin/Boolean, com.squareup.wire.schema/Location =..., kotlin/Function0<kotlin/String>) // com.squareup.wire.schema.internal.parser/SyntaxReader.expect|expect(kotlin.Boolean;com.squareup.wire.schema.Location;kotlin.Function0<kotlin.String>){}[0]
}
final class com.squareup.wire.schema.internal/ProfileFileElement { // com.squareup.wire.schema.internal/ProfileFileElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String? =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<com.squareup.wire.schema.internal/TypeConfigElement> =...) // com.squareup.wire.schema.internal/ProfileFileElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String?;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.TypeConfigElement>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal/ProfileFileElement.component1|component1(){}[0]
    final fun component2(): kotlin/String? // com.squareup.wire.schema.internal/ProfileFileElement.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema.internal/ProfileFileElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal/TypeConfigElement> // com.squareup.wire.schema.internal/ProfileFileElement.component4|component4(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String? =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<com.squareup.wire.schema.internal/TypeConfigElement> =...): com.squareup.wire.schema.internal/ProfileFileElement // com.squareup.wire.schema.internal/ProfileFileElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String?;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.TypeConfigElement>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal/ProfileFileElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal/ProfileFileElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal/ProfileFileElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal/ProfileFileElement.toString|toString(){}[0]
    final val imports // com.squareup.wire.schema.internal/ProfileFileElement.imports|{}imports[0]
        final fun <get-imports>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema.internal/ProfileFileElement.imports.<get-imports>|<get-imports>(){}[0]
    final val location // com.squareup.wire.schema.internal/ProfileFileElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal/ProfileFileElement.location.<get-location>|<get-location>(){}[0]
    final val packageName // com.squareup.wire.schema.internal/ProfileFileElement.packageName|{}packageName[0]
        final fun <get-packageName>(): kotlin/String? // com.squareup.wire.schema.internal/ProfileFileElement.packageName.<get-packageName>|<get-packageName>(){}[0]
    final val typeConfigs // com.squareup.wire.schema.internal/ProfileFileElement.typeConfigs|{}typeConfigs[0]
        final fun <get-typeConfigs>(): kotlin.collections/List<com.squareup.wire.schema.internal/TypeConfigElement> // com.squareup.wire.schema.internal/ProfileFileElement.typeConfigs.<get-typeConfigs>|<get-typeConfigs>(){}[0]
}
final class com.squareup.wire.schema.internal/ProfileParser { // com.squareup.wire.schema.internal/ProfileParser|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String) // com.squareup.wire.schema.internal/ProfileParser.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String){}[0]
    final fun read(): com.squareup.wire.schema.internal/ProfileFileElement // com.squareup.wire.schema.internal/ProfileParser.read|read(){}[0]
}
final class com.squareup.wire.schema.internal/SchemaEncoder { // com.squareup.wire.schema.internal/SchemaEncoder|null[0]
    constructor <init>(com.squareup.wire.schema/Schema) // com.squareup.wire.schema.internal/SchemaEncoder.<init>|<init>(com.squareup.wire.schema.Schema){}[0]
    final fun encode(com.squareup.wire.schema/ProtoFile): okio/ByteString // com.squareup.wire.schema.internal/SchemaEncoder.encode|encode(com.squareup.wire.schema.ProtoFile){}[0]
}
final class com.squareup.wire.schema.internal/TypeConfigElement { // com.squareup.wire.schema.internal/TypeConfigElement|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String? =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., kotlin/String? =..., kotlin/String? =...) // com.squareup.wire.schema.internal/TypeConfigElement.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String?;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;kotlin.String?;kotlin.String?){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal/TypeConfigElement.component1|component1(){}[0]
    final fun component2(): kotlin/String? // com.squareup.wire.schema.internal/TypeConfigElement.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema.internal/TypeConfigElement.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal/TypeConfigElement.component4|component4(){}[0]
    final fun component5(): kotlin/String? // com.squareup.wire.schema.internal/TypeConfigElement.component5|component5(){}[0]
    final fun component6(): kotlin/String? // com.squareup.wire.schema.internal/TypeConfigElement.component6|component6(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String? =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> =..., kotlin/String? =..., kotlin/String? =...): com.squareup.wire.schema.internal/TypeConfigElement // com.squareup.wire.schema.internal/TypeConfigElement.copy|copy(com.squareup.wire.schema.Location;kotlin.String?;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>;kotlin.String?;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal/TypeConfigElement.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal/TypeConfigElement.hashCode|hashCode(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema.internal/TypeConfigElement.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema.internal/TypeConfigElement.toString|toString(){}[0]
    final val adapter // com.squareup.wire.schema.internal/TypeConfigElement.adapter|{}adapter[0]
        final fun <get-adapter>(): kotlin/String? // com.squareup.wire.schema.internal/TypeConfigElement.adapter.<get-adapter>|<get-adapter>(){}[0]
    final val documentation // com.squareup.wire.schema.internal/TypeConfigElement.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema.internal/TypeConfigElement.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema.internal/TypeConfigElement.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema.internal/TypeConfigElement.location.<get-location>|<get-location>(){}[0]
    final val target // com.squareup.wire.schema.internal/TypeConfigElement.target|{}target[0]
        final fun <get-target>(): kotlin/String? // com.squareup.wire.schema.internal/TypeConfigElement.target.<get-target>|<get-target>(){}[0]
    final val type // com.squareup.wire.schema.internal/TypeConfigElement.type|{}type[0]
        final fun <get-type>(): kotlin/String? // com.squareup.wire.schema.internal/TypeConfigElement.type.<get-type>|<get-type>(){}[0]
    final val with // com.squareup.wire.schema.internal/TypeConfigElement.with|{}with[0]
        final fun <get-with>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema.internal/TypeConfigElement.with.<get-with>|<get-with>(){}[0]
}
final class com.squareup.wire.schema.internal/TypeMover { // com.squareup.wire.schema.internal/TypeMover|null[0]
    constructor <init>(com.squareup.wire.schema/Schema, kotlin.collections/List<com.squareup.wire.schema.internal/TypeMover.Move>) // com.squareup.wire.schema.internal/TypeMover.<init>|<init>(com.squareup.wire.schema.Schema;kotlin.collections.List<com.squareup.wire.schema.internal.TypeMover.Move>){}[0]
    final class Move { // com.squareup.wire.schema.internal/TypeMover.Move|null[0]
        constructor <init>(com.squareup.wire.schema/ProtoType, kotlin/String) // com.squareup.wire.schema.internal/TypeMover.Move.<init>|<init>(com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
        final fun component1(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema.internal/TypeMover.Move.component1|component1(){}[0]
        final fun component2(): kotlin/String // com.squareup.wire.schema.internal/TypeMover.Move.component2|component2(){}[0]
        final fun copy(com.squareup.wire.schema/ProtoType =..., kotlin/String =...): com.squareup.wire.schema.internal/TypeMover.Move // com.squareup.wire.schema.internal/TypeMover.Move.copy|copy(com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema.internal/TypeMover.Move.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.squareup.wire.schema.internal/TypeMover.Move.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.squareup.wire.schema.internal/TypeMover.Move.toString|toString(){}[0]
        final val targetPath // com.squareup.wire.schema.internal/TypeMover.Move.targetPath|<get-targetPath>(){}[0]
            final fun <get-targetPath>(): kotlin/String // com.squareup.wire.schema.internal/TypeMover.Move.targetPath.<get-targetPath>|<get-targetPath>(){}[0]
        final val type // com.squareup.wire.schema.internal/TypeMover.Move.type|<get-type>(){}[0]
            final fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema.internal/TypeMover.Move.type.<get-type>|<get-type>(){}[0]
    }
    final fun move(): com.squareup.wire.schema/Schema // com.squareup.wire.schema.internal/TypeMover.move|move(){}[0]
}
final class com.squareup.wire.schema/ClaimedDefinitions { // com.squareup.wire.schema/ClaimedDefinitions|null[0]
    constructor <init>() // com.squareup.wire.schema/ClaimedDefinitions.<init>|<init>(){}[0]
    final fun claim(com.squareup.wire.schema/ProtoMember) // com.squareup.wire.schema/ClaimedDefinitions.claim|claim(com.squareup.wire.schema.ProtoMember){}[0]
    final fun claim(com.squareup.wire.schema/ProtoType) // com.squareup.wire.schema/ClaimedDefinitions.claim|claim(com.squareup.wire.schema.ProtoType){}[0]
    final fun claim(com.squareup.wire.schema/Service) // com.squareup.wire.schema/ClaimedDefinitions.claim|claim(com.squareup.wire.schema.Service){}[0]
    final fun claim(com.squareup.wire.schema/Type) // com.squareup.wire.schema/ClaimedDefinitions.claim|claim(com.squareup.wire.schema.Type){}[0]
    final fun contains(com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/ClaimedDefinitions.contains|contains(com.squareup.wire.schema.ProtoMember){}[0]
    final fun contains(com.squareup.wire.schema/ProtoType): kotlin/Boolean // com.squareup.wire.schema/ClaimedDefinitions.contains|contains(com.squareup.wire.schema.ProtoType){}[0]
    final fun contains(com.squareup.wire.schema/Service): kotlin/Boolean // com.squareup.wire.schema/ClaimedDefinitions.contains|contains(com.squareup.wire.schema.Service){}[0]
    final fun contains(com.squareup.wire.schema/Type): kotlin/Boolean // com.squareup.wire.schema/ClaimedDefinitions.contains|contains(com.squareup.wire.schema.Type){}[0]
}
final class com.squareup.wire.schema/ClaimedPaths { // com.squareup.wire.schema/ClaimedPaths|null[0]
    constructor <init>() // com.squareup.wire.schema/ClaimedPaths.<init>|<init>(){}[0]
    final fun claim(okio/Path, com.squareup.wire.schema/Extend) // com.squareup.wire.schema/ClaimedPaths.claim|claim(okio.Path;com.squareup.wire.schema.Extend){}[0]
    final fun claim(okio/Path, com.squareup.wire.schema/Service) // com.squareup.wire.schema/ClaimedPaths.claim|claim(okio.Path;com.squareup.wire.schema.Service){}[0]
    final fun claim(okio/Path, com.squareup.wire.schema/Type) // com.squareup.wire.schema/ClaimedPaths.claim|claim(okio.Path;com.squareup.wire.schema.Type){}[0]
}
final class com.squareup.wire.schema/EmittingRules { // com.squareup.wire.schema/EmittingRules|null[0]
    constructor <init>() // com.squareup.wire.schema/EmittingRules.<init>|<init>(){}[0]
    final class Builder { // com.squareup.wire.schema/EmittingRules.Builder|null[0]
        constructor <init>() // com.squareup.wire.schema/EmittingRules.Builder.<init>|<init>(){}[0]
        final fun build(): com.squareup.wire.schema/EmittingRules // com.squareup.wire.schema/EmittingRules.Builder.build|build(){}[0]
        final fun exclude(kotlin.collections/Iterable<kotlin/String>): com.squareup.wire.schema/EmittingRules.Builder // com.squareup.wire.schema/EmittingRules.Builder.exclude|exclude(kotlin.collections.Iterable<kotlin.String>){}[0]
        final fun exclude(kotlin/String): com.squareup.wire.schema/EmittingRules.Builder // com.squareup.wire.schema/EmittingRules.Builder.exclude|exclude(kotlin.String){}[0]
        final fun include(kotlin.collections/Iterable<kotlin/String>): com.squareup.wire.schema/EmittingRules.Builder // com.squareup.wire.schema/EmittingRules.Builder.include|include(kotlin.collections.Iterable<kotlin.String>){}[0]
        final fun include(kotlin/String): com.squareup.wire.schema/EmittingRules.Builder // com.squareup.wire.schema/EmittingRules.Builder.include|include(kotlin.String){}[0]
    }
    final fun includes(com.squareup.wire.schema/ProtoType): kotlin/Boolean // com.squareup.wire.schema/EmittingRules.includes|includes(com.squareup.wire.schema.ProtoType){}[0]
    final fun unusedExcludes(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/EmittingRules.unusedExcludes|unusedExcludes(){}[0]
    final fun unusedIncludes(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/EmittingRules.unusedIncludes|unusedIncludes(){}[0]
    final object Companion // com.squareup.wire.schema/EmittingRules.Companion|null[0]
    final val isEmpty // com.squareup.wire.schema/EmittingRules.isEmpty|{}isEmpty[0]
        final fun <get-isEmpty>(): kotlin/Boolean // com.squareup.wire.schema/EmittingRules.isEmpty.<get-isEmpty>|<get-isEmpty>(){}[0]
}
final class com.squareup.wire.schema/EnclosingType : com.squareup.wire.schema/Type { // com.squareup.wire.schema/EnclosingType|null[0]
    constructor <init>(com.squareup.wire.schema/Location, com.squareup.wire.schema/ProtoType, kotlin/String, kotlin/String, kotlin.collections/List<com.squareup.wire.schema/Type>, kotlin.collections/List<com.squareup.wire.schema/Extend>, com.squareup.wire/Syntax) // com.squareup.wire.schema/EnclosingType.<init>|<init>(com.squareup.wire.schema.Location;com.squareup.wire.schema.ProtoType;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Type>;kotlin.collections.List<com.squareup.wire.schema.Extend>;com.squareup.wire.Syntax){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/EnclosingType.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/EnclosingType.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema/EnclosingType.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema/EnclosingType.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/EnclosingType.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/EnclosingType.component6|component6(){}[0]
    final fun component7(): com.squareup.wire/Syntax // com.squareup.wire.schema/EnclosingType.component7|component7(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., com.squareup.wire.schema/ProtoType =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema/Type> =..., kotlin.collections/List<com.squareup.wire.schema/Extend> =..., com.squareup.wire/Syntax =...): com.squareup.wire.schema/EnclosingType // com.squareup.wire.schema/EnclosingType.copy|copy(com.squareup.wire.schema.Location;com.squareup.wire.schema.ProtoType;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Type>;kotlin.collections.List<com.squareup.wire.schema.Extend>;com.squareup.wire.Syntax){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/EnclosingType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/EnclosingType.hashCode|hashCode(){}[0]
    final fun linkMembers(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/EnclosingType.linkMembers|linkMembers(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/EnclosingType.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Type? // com.squareup.wire.schema/EnclosingType.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun retainLinked(kotlin.collections/Set<com.squareup.wire.schema/ProtoType>, kotlin.collections/Set<com.squareup.wire.schema/Field>): com.squareup.wire.schema/Type? // com.squareup.wire.schema/EnclosingType.retainLinked|retainLinked(kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Set<com.squareup.wire.schema.Field>){}[0]
    final fun toElement(): com.squareup.wire.schema.internal.parser/MessageElement // com.squareup.wire.schema/EnclosingType.toElement|toElement(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/EnclosingType.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/EnclosingType.validate|validate(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules){}[0]
    final val documentation // com.squareup.wire.schema/EnclosingType.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/EnclosingType.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema/EnclosingType.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/EnclosingType.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/EnclosingType.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/EnclosingType.name.<get-name>|<get-name>(){}[0]
    final val nestedExtendList // com.squareup.wire.schema/EnclosingType.nestedExtendList|{}nestedExtendList[0]
        final fun <get-nestedExtendList>(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/EnclosingType.nestedExtendList.<get-nestedExtendList>|<get-nestedExtendList>(){}[0]
    final val nestedTypes // com.squareup.wire.schema/EnclosingType.nestedTypes|{}nestedTypes[0]
        final fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/EnclosingType.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    final val options // com.squareup.wire.schema/EnclosingType.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/EnclosingType.options.<get-options>|<get-options>(){}[0]
    final val syntax // com.squareup.wire.schema/EnclosingType.syntax|{}syntax[0]
        final fun <get-syntax>(): com.squareup.wire/Syntax // com.squareup.wire.schema/EnclosingType.syntax.<get-syntax>|<get-syntax>(){}[0]
    final val type // com.squareup.wire.schema/EnclosingType.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/EnclosingType.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/EnumConstant { // com.squareup.wire.schema/EnumConstant|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/Int, kotlin/String, com.squareup.wire.schema/Options) // com.squareup.wire.schema/EnumConstant.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.Int;kotlin.String;com.squareup.wire.schema.Options){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/EnumConstant.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/EnumConstant.component2|component2(){}[0]
    final fun component3(): kotlin/Int // com.squareup.wire.schema/EnumConstant.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema/EnumConstant.component4|component4(){}[0]
    final fun component5(): com.squareup.wire.schema/Options // com.squareup.wire.schema/EnumConstant.component5|component5(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/Int =..., kotlin/String =..., com.squareup.wire.schema/Options =...): com.squareup.wire.schema/EnumConstant // com.squareup.wire.schema/EnumConstant.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.Int;kotlin.String;com.squareup.wire.schema.Options){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/EnumConstant.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/EnumConstant.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/EnumConstant.toString|toString(){}[0]
    final object Companion // com.squareup.wire.schema/EnumConstant.Companion|null[0]
    final val documentation // com.squareup.wire.schema/EnumConstant.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/EnumConstant.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val isDeprecated // com.squareup.wire.schema/EnumConstant.isDeprecated|{}isDeprecated[0]
        final fun <get-isDeprecated>(): kotlin/Boolean // com.squareup.wire.schema/EnumConstant.isDeprecated.<get-isDeprecated>|<get-isDeprecated>(){}[0]
    final val location // com.squareup.wire.schema/EnumConstant.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/EnumConstant.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/EnumConstant.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/EnumConstant.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema/EnumConstant.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/EnumConstant.options.<get-options>|<get-options>(){}[0]
    final val tag // com.squareup.wire.schema/EnumConstant.tag|{}tag[0]
        final fun <get-tag>(): kotlin/Int // com.squareup.wire.schema/EnumConstant.tag.<get-tag>|<get-tag>(){}[0]
}
final class com.squareup.wire.schema/EnumType : com.squareup.wire.schema/Type { // com.squareup.wire.schema/EnumType|null[0]
    constructor <init>(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Location, kotlin/String, kotlin/String, kotlin.collections/List<com.squareup.wire.schema/EnumConstant>, kotlin.collections/List<com.squareup.wire.schema/Reserved>, com.squareup.wire.schema/Options, com.squareup.wire/Syntax) // com.squareup.wire.schema/EnumType.<init>|<init>(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.EnumConstant>;kotlin.collections.List<com.squareup.wire.schema.Reserved>;com.squareup.wire.schema.Options;com.squareup.wire.Syntax){}[0]
    final fun allowAlias(): kotlin/Boolean // com.squareup.wire.schema/EnumType.allowAlias|allowAlias(){}[0]
    final fun component1(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/EnumType.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema/Location // com.squareup.wire.schema/EnumType.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema/EnumType.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema/EnumType.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema/EnumConstant> // com.squareup.wire.schema/EnumType.component5|component5(){}[0]
    final fun component7(): com.squareup.wire.schema/Options // com.squareup.wire.schema/EnumType.component7|component7(){}[0]
    final fun component8(): com.squareup.wire/Syntax // com.squareup.wire.schema/EnumType.component8|component8(){}[0]
    final fun constant(kotlin/Int): com.squareup.wire.schema/EnumConstant? // com.squareup.wire.schema/EnumType.constant|constant(kotlin.Int){}[0]
    final fun constant(kotlin/String): com.squareup.wire.schema/EnumConstant? // com.squareup.wire.schema/EnumType.constant|constant(kotlin.String){}[0]
    final fun copy(com.squareup.wire.schema/ProtoType =..., com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema/EnumConstant> =..., kotlin.collections/List<com.squareup.wire.schema/Reserved> =..., com.squareup.wire.schema/Options =..., com.squareup.wire/Syntax =...): com.squareup.wire.schema/EnumType // com.squareup.wire.schema/EnumType.copy|copy(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.EnumConstant>;kotlin.collections.List<com.squareup.wire.schema.Reserved>;com.squareup.wire.schema.Options;com.squareup.wire.Syntax){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/EnumType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/EnumType.hashCode|hashCode(){}[0]
    final fun linkMembers(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/EnumType.linkMembers|linkMembers(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/EnumType.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Type? // com.squareup.wire.schema/EnumType.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun retainLinked(kotlin.collections/Set<com.squareup.wire.schema/ProtoType>, kotlin.collections/Set<com.squareup.wire.schema/Field>): com.squareup.wire.schema/Type? // com.squareup.wire.schema/EnumType.retainLinked|retainLinked(kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Set<com.squareup.wire.schema.Field>){}[0]
    final fun toElement(): com.squareup.wire.schema.internal.parser/EnumElement // com.squareup.wire.schema/EnumType.toElement|toElement(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/EnumType.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/EnumType.validate|validate(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules){}[0]
    final object Companion { // com.squareup.wire.schema/EnumType.Companion|null[0]
        final fun fromElement(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema.internal.parser/EnumElement, com.squareup.wire/Syntax): com.squareup.wire.schema/EnumType // com.squareup.wire.schema/EnumType.Companion.fromElement|fromElement(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.internal.parser.EnumElement;com.squareup.wire.Syntax){}[0]
    }
    final val constants // com.squareup.wire.schema/EnumType.constants|{}constants[0]
        final fun <get-constants>(): kotlin.collections/List<com.squareup.wire.schema/EnumConstant> // com.squareup.wire.schema/EnumType.constants.<get-constants>|<get-constants>(){}[0]
    final val documentation // com.squareup.wire.schema/EnumType.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/EnumType.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val isDeprecated // com.squareup.wire.schema/EnumType.isDeprecated|{}isDeprecated[0]
        final fun <get-isDeprecated>(): kotlin/Boolean // com.squareup.wire.schema/EnumType.isDeprecated.<get-isDeprecated>|<get-isDeprecated>(){}[0]
    final val location // com.squareup.wire.schema/EnumType.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/EnumType.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/EnumType.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/EnumType.name.<get-name>|<get-name>(){}[0]
    final val nestedExtendList // com.squareup.wire.schema/EnumType.nestedExtendList|{}nestedExtendList[0]
        final fun <get-nestedExtendList>(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/EnumType.nestedExtendList.<get-nestedExtendList>|<get-nestedExtendList>(){}[0]
    final val nestedTypes // com.squareup.wire.schema/EnumType.nestedTypes|{}nestedTypes[0]
        final fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/EnumType.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    final val options // com.squareup.wire.schema/EnumType.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/EnumType.options.<get-options>|<get-options>(){}[0]
    final val syntax // com.squareup.wire.schema/EnumType.syntax|{}syntax[0]
        final fun <get-syntax>(): com.squareup.wire/Syntax // com.squareup.wire.schema/EnumType.syntax.<get-syntax>|<get-syntax>(){}[0]
    final val type // com.squareup.wire.schema/EnumType.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/EnumType.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/ErrorCollector { // com.squareup.wire.schema/ErrorCollector|null[0]
    constructor <init>() // com.squareup.wire.schema/ErrorCollector.<init>|<init>(){}[0]
    final fun at(kotlin/Any): com.squareup.wire.schema/ErrorCollector // com.squareup.wire.schema/ErrorCollector.at|at(kotlin.Any){}[0]
    final fun plusAssign(kotlin/String) // com.squareup.wire.schema/ErrorCollector.plusAssign|plusAssign(kotlin.String){}[0]
    final fun throwIfNonEmpty() // com.squareup.wire.schema/ErrorCollector.throwIfNonEmpty|throwIfNonEmpty(){}[0]
    final val errors // com.squareup.wire.schema/ErrorCollector.errors|{}errors[0]
        final fun <get-errors>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/ErrorCollector.errors.<get-errors>|<get-errors>(){}[0]
}
final class com.squareup.wire.schema/Extend { // com.squareup.wire.schema/Extend|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String, kotlin.collections/List<com.squareup.wire.schema/Field>) // com.squareup.wire.schema/Extend.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Field>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Extend.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/Extend.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema/Extend.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/Extend.component4|component4(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema/Field> =...): com.squareup.wire.schema/Extend // com.squareup.wire.schema/Extend.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Field>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Extend.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Extend.hashCode|hashCode(){}[0]
    final fun link(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Extend.link|link(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/Extend.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    final fun member(com.squareup.wire.schema/Field): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/Extend.member|member(com.squareup.wire.schema.Field){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Extend? // com.squareup.wire.schema/Extend.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun retainLinked(kotlin.collections/Set<com.squareup.wire.schema/Field>): com.squareup.wire.schema/Extend? // com.squareup.wire.schema/Extend.retainLinked|retainLinked(kotlin.collections.Set<com.squareup.wire.schema.Field>){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Extend.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/Extend.validate|validate(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules){}[0]
    final object Companion { // com.squareup.wire.schema/Extend.Companion|null[0]
        final fun fromElements(kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement>): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/Extend.Companion.fromElements|fromElements(kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtendElement>){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/Extend>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtendElement> // com.squareup.wire.schema/Extend.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.Extend>){}[0]
    }
    final val documentation // com.squareup.wire.schema/Extend.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Extend.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val fields // com.squareup.wire.schema/Extend.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/Extend.fields.<get-fields>|<get-fields>(){}[0]
    final val location // com.squareup.wire.schema/Extend.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Extend.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/Extend.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/Extend.name.<get-name>|<get-name>(){}[0]
    final var type // com.squareup.wire.schema/Extend.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType? // com.squareup.wire.schema/Extend.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/Extensions { // com.squareup.wire.schema/Extensions|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin.collections/List<kotlin/Any>) // com.squareup.wire.schema/Extensions.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Extensions.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/Extensions.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema/Extensions.component3|component3(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin.collections/List<kotlin/Any> =...): com.squareup.wire.schema/Extensions // com.squareup.wire.schema/Extensions.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Extensions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Extensions.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Extensions.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Extensions.validate|validate(com.squareup.wire.schema.Linker){}[0]
    final object Companion { // com.squareup.wire.schema/Extensions.Companion|null[0]
        final fun fromElements(kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtensionsElement>): kotlin.collections/List<com.squareup.wire.schema/Extensions> // com.squareup.wire.schema/Extensions.Companion.fromElements|fromElements(kotlin.collections.List<com.squareup.wire.schema.internal.parser.ExtensionsElement>){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/Extensions>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ExtensionsElement> // com.squareup.wire.schema/Extensions.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.Extensions>){}[0]
    }
    final val documentation // com.squareup.wire.schema/Extensions.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Extensions.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema/Extensions.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Extensions.location.<get-location>|<get-location>(){}[0]
    final val values // com.squareup.wire.schema/Extensions.values|{}values[0]
        final fun <get-values>(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema/Extensions.values.<get-values>|<get-values>(){}[0]
}
final class com.squareup.wire.schema/Field { // com.squareup.wire.schema/Field|null[0]
    constructor <init>(kotlin.collections/List<kotlin/String>, com.squareup.wire.schema/Location, com.squareup.wire.schema/Field.Label?, kotlin/String, kotlin/String, kotlin/Int, kotlin/String?, kotlin/String, com.squareup.wire.schema/Options, kotlin/Boolean, kotlin/Boolean, kotlin/String?) // com.squareup.wire.schema/Field.<init>|<init>(kotlin.collections.List<kotlin.String>;com.squareup.wire.schema.Location;com.squareup.wire.schema.Field.Label?;kotlin.String;kotlin.String;kotlin.Int;kotlin.String?;kotlin.String;com.squareup.wire.schema.Options;kotlin.Boolean;kotlin.Boolean;kotlin.String?){}[0]
    final enum class EncodeMode : kotlin/Enum<com.squareup.wire.schema/Field.EncodeMode> { // com.squareup.wire.schema/Field.EncodeMode|null[0]
        enum entry MAP // com.squareup.wire.schema/Field.EncodeMode.MAP|null[0]
        enum entry NULL_IF_ABSENT // com.squareup.wire.schema/Field.EncodeMode.NULL_IF_ABSENT|null[0]
        enum entry OMIT_IDENTITY // com.squareup.wire.schema/Field.EncodeMode.OMIT_IDENTITY|null[0]
        enum entry PACKED // com.squareup.wire.schema/Field.EncodeMode.PACKED|null[0]
        enum entry REPEATED // com.squareup.wire.schema/Field.EncodeMode.REPEATED|null[0]
        enum entry REQUIRED // com.squareup.wire.schema/Field.EncodeMode.REQUIRED|null[0]
        final fun valueOf(kotlin/String): com.squareup.wire.schema/Field.EncodeMode // com.squareup.wire.schema/Field.EncodeMode.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.squareup.wire.schema/Field.EncodeMode> // com.squareup.wire.schema/Field.EncodeMode.values|values#static(){}[0]
        final val entries // com.squareup.wire.schema/Field.EncodeMode.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.squareup.wire.schema/Field.EncodeMode> // com.squareup.wire.schema/Field.EncodeMode.entries.<get-entries>|<get-entries>#static(){}[0]
    }
    final enum class Label : kotlin/Enum<com.squareup.wire.schema/Field.Label> { // com.squareup.wire.schema/Field.Label|null[0]
        enum entry ONE_OF // com.squareup.wire.schema/Field.Label.ONE_OF|null[0]
        enum entry OPTIONAL // com.squareup.wire.schema/Field.Label.OPTIONAL|null[0]
        enum entry REPEATED // com.squareup.wire.schema/Field.Label.REPEATED|null[0]
        enum entry REQUIRED // com.squareup.wire.schema/Field.Label.REQUIRED|null[0]
        final fun valueOf(kotlin/String): com.squareup.wire.schema/Field.Label // com.squareup.wire.schema/Field.Label.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.squareup.wire.schema/Field.Label> // com.squareup.wire.schema/Field.Label.values|values#static(){}[0]
        final val entries // com.squareup.wire.schema/Field.Label.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.squareup.wire.schema/Field.Label> // com.squareup.wire.schema/Field.Label.entries.<get-entries>|<get-entries>#static(){}[0]
    }
    final fun component1(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/Field.component1|component1(){}[0]
    final fun component10(): kotlin/Boolean // com.squareup.wire.schema/Field.component10|component10(){}[0]
    final fun component11(): kotlin/Boolean // com.squareup.wire.schema/Field.component11|component11(){}[0]
    final fun component12(): kotlin/String? // com.squareup.wire.schema/Field.component12|component12(){}[0]
    final fun component2(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Field.component2|component2(){}[0]
    final fun component3(): com.squareup.wire.schema/Field.Label? // com.squareup.wire.schema/Field.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema/Field.component4|component4(){}[0]
    final fun component5(): kotlin/String // com.squareup.wire.schema/Field.component5|component5(){}[0]
    final fun component6(): kotlin/Int // com.squareup.wire.schema/Field.component6|component6(){}[0]
    final fun component7(): kotlin/String? // com.squareup.wire.schema/Field.component7|component7(){}[0]
    final fun component9(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Field.component9|component9(){}[0]
    final fun copy(kotlin.collections/List<kotlin/String> =..., com.squareup.wire.schema/Location =..., com.squareup.wire.schema/Field.Label? =..., kotlin/String =..., kotlin/String =..., kotlin/Int =..., kotlin/String? =..., kotlin/String =..., com.squareup.wire.schema/Options =..., kotlin/Boolean =..., kotlin/Boolean =..., kotlin/String? =...): com.squareup.wire.schema/Field // com.squareup.wire.schema/Field.copy|copy(kotlin.collections.List<kotlin.String>;com.squareup.wire.schema.Location;com.squareup.wire.schema.Field.Label?;kotlin.String;kotlin.String;kotlin.Int;kotlin.String?;kotlin.String;com.squareup.wire.schema.Options;kotlin.Boolean;kotlin.Boolean;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Field.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Field.hashCode|hashCode(){}[0]
    final fun link(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Field.link|link(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/Field.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet, com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/Field? // com.squareup.wire.schema/Field.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet;com.squareup.wire.schema.ProtoType){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Field.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/Field.validate|validate(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules){}[0]
    final object Companion { // com.squareup.wire.schema/Field.Companion|null[0]
        final fun fromElements(kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement>, kotlin/Boolean, kotlin/Boolean): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/Field.Companion.fromElements|fromElements(kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.FieldElement>;kotlin.Boolean;kotlin.Boolean){}[0]
        final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet, com.squareup.wire.schema/ProtoType, kotlin.collections/Collection<com.squareup.wire.schema/Field>): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/Field.Companion.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet;com.squareup.wire.schema.ProtoType;kotlin.collections.Collection<com.squareup.wire.schema.Field>){}[0]
        final fun retainLinked(kotlin.collections/List<com.squareup.wire.schema/Field>): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/Field.Companion.retainLinked|retainLinked(kotlin.collections.List<com.squareup.wire.schema.Field>){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/Field>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/FieldElement> // com.squareup.wire.schema/Field.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.Field>){}[0]
    }
    final val declaredJsonName // com.squareup.wire.schema/Field.declaredJsonName|{}declaredJsonName[0]
        final fun <get-declaredJsonName>(): kotlin/String? // com.squareup.wire.schema/Field.declaredJsonName.<get-declaredJsonName>|<get-declaredJsonName>(){}[0]
    final val default // com.squareup.wire.schema/Field.default|{}default[0]
        final fun <get-default>(): kotlin/String? // com.squareup.wire.schema/Field.default.<get-default>|<get-default>(){}[0]
    final val documentation // com.squareup.wire.schema/Field.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Field.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val isDeprecated // com.squareup.wire.schema/Field.isDeprecated|{}isDeprecated[0]
        final fun <get-isDeprecated>(): kotlin/Boolean // com.squareup.wire.schema/Field.isDeprecated.<get-isDeprecated>|<get-isDeprecated>(){}[0]
    final val isExtension // com.squareup.wire.schema/Field.isExtension|{}isExtension[0]
        final fun <get-isExtension>(): kotlin/Boolean // com.squareup.wire.schema/Field.isExtension.<get-isExtension>|<get-isExtension>(){}[0]
    final val isOneOf // com.squareup.wire.schema/Field.isOneOf|{}isOneOf[0]
        final fun <get-isOneOf>(): kotlin/Boolean // com.squareup.wire.schema/Field.isOneOf.<get-isOneOf>|<get-isOneOf>(){}[0]
    final val isPacked // com.squareup.wire.schema/Field.isPacked|{}isPacked[0]
        final fun <get-isPacked>(): kotlin/Boolean // com.squareup.wire.schema/Field.isPacked.<get-isPacked>|<get-isPacked>(){}[0]
    final val isRepeated // com.squareup.wire.schema/Field.isRepeated|{}isRepeated[0]
        final fun <get-isRepeated>(): kotlin/Boolean // com.squareup.wire.schema/Field.isRepeated.<get-isRepeated>|<get-isRepeated>(){}[0]
    final val isRequired // com.squareup.wire.schema/Field.isRequired|{}isRequired[0]
        final fun <get-isRequired>(): kotlin/Boolean // com.squareup.wire.schema/Field.isRequired.<get-isRequired>|<get-isRequired>(){}[0]
    final val label // com.squareup.wire.schema/Field.label|{}label[0]
        final fun <get-label>(): com.squareup.wire.schema/Field.Label? // com.squareup.wire.schema/Field.label.<get-label>|<get-label>(){}[0]
    final val location // com.squareup.wire.schema/Field.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Field.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/Field.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/Field.name.<get-name>|<get-name>(){}[0]
    final val namespaces // com.squareup.wire.schema/Field.namespaces|{}namespaces[0]
        final fun <get-namespaces>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/Field.namespaces.<get-namespaces>|<get-namespaces>(){}[0]
    final val options // com.squareup.wire.schema/Field.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Field.options.<get-options>|<get-options>(){}[0]
    final val packageName // com.squareup.wire.schema/Field.packageName|{}packageName[0]
        final fun <get-packageName>(): kotlin/String // com.squareup.wire.schema/Field.packageName.<get-packageName>|<get-packageName>(){}[0]
    final val qualifiedName // com.squareup.wire.schema/Field.qualifiedName|{}qualifiedName[0]
        final fun <get-qualifiedName>(): kotlin/String // com.squareup.wire.schema/Field.qualifiedName.<get-qualifiedName>|<get-qualifiedName>(){}[0]
    final val tag // com.squareup.wire.schema/Field.tag|{}tag[0]
        final fun <get-tag>(): kotlin/Int // com.squareup.wire.schema/Field.tag.<get-tag>|<get-tag>(){}[0]
    final val useArray // com.squareup.wire.schema/Field.useArray|{}useArray[0]
        final fun <get-useArray>(): kotlin/Boolean // com.squareup.wire.schema/Field.useArray.<get-useArray>|<get-useArray>(){}[0]
    final var encodeMode // com.squareup.wire.schema/Field.encodeMode|<get-encodeMode>(){}[0]
        final fun <get-encodeMode>(): com.squareup.wire.schema/Field.EncodeMode? // com.squareup.wire.schema/Field.encodeMode.<get-encodeMode>|<get-encodeMode>(){}[0]
    final var isRedacted // com.squareup.wire.schema/Field.isRedacted|{}isRedacted[0]
        final fun <get-isRedacted>(): kotlin/Boolean // com.squareup.wire.schema/Field.isRedacted.<get-isRedacted>|<get-isRedacted>(){}[0]
    final var jsonName // com.squareup.wire.schema/Field.jsonName|{}jsonName[0]
        final fun <get-jsonName>(): kotlin/String? // com.squareup.wire.schema/Field.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
    final var type // com.squareup.wire.schema/Field.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType? // com.squareup.wire.schema/Field.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/LinkedOptionEntry { // com.squareup.wire.schema/LinkedOptionEntry|null[0]
    constructor <init>(com.squareup.wire.schema.internal.parser/OptionElement, com.squareup.wire.schema/ProtoMember, kotlin/Any?) // com.squareup.wire.schema/LinkedOptionEntry.<init>|<init>(com.squareup.wire.schema.internal.parser.OptionElement;com.squareup.wire.schema.ProtoMember;kotlin.Any?){}[0]
    final fun component1(): com.squareup.wire.schema.internal.parser/OptionElement // com.squareup.wire.schema/LinkedOptionEntry.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/LinkedOptionEntry.component2|component2(){}[0]
    final fun component3(): kotlin/Any? // com.squareup.wire.schema/LinkedOptionEntry.component3|component3(){}[0]
    final fun copy(com.squareup.wire.schema.internal.parser/OptionElement =..., com.squareup.wire.schema/ProtoMember =..., kotlin/Any? =...): com.squareup.wire.schema/LinkedOptionEntry // com.squareup.wire.schema/LinkedOptionEntry.copy|copy(com.squareup.wire.schema.internal.parser.OptionElement;com.squareup.wire.schema.ProtoMember;kotlin.Any?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/LinkedOptionEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/LinkedOptionEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/LinkedOptionEntry.toString|toString(){}[0]
    final val optionElement // com.squareup.wire.schema/LinkedOptionEntry.optionElement|{}optionElement[0]
        final fun <get-optionElement>(): com.squareup.wire.schema.internal.parser/OptionElement // com.squareup.wire.schema/LinkedOptionEntry.optionElement.<get-optionElement>|<get-optionElement>(){}[0]
    final val protoMember // com.squareup.wire.schema/LinkedOptionEntry.protoMember|{}protoMember[0]
        final fun <get-protoMember>(): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/LinkedOptionEntry.protoMember.<get-protoMember>|<get-protoMember>(){}[0]
    final val value // com.squareup.wire.schema/LinkedOptionEntry.value|{}value[0]
        final fun <get-value>(): kotlin/Any? // com.squareup.wire.schema/LinkedOptionEntry.value.<get-value>|<get-value>(){}[0]
}
final class com.squareup.wire.schema/Linker { // com.squareup.wire.schema/Linker|null[0]
    constructor <init>(com.squareup.wire.schema/Loader, com.squareup.wire.schema/ErrorCollector, kotlin/Boolean, kotlin/Boolean) // com.squareup.wire.schema/Linker.<init>|<init>(com.squareup.wire.schema.Loader;com.squareup.wire.schema.ErrorCollector;kotlin.Boolean;kotlin.Boolean){}[0]
    constructor <init>(com.squareup.wire.schema/Loader, com.squareup.wire.schema/ErrorCollector, kotlin/Boolean, kotlin/Boolean, kotlin.collections/List<com.squareup.wire.schema/ProtoType>) // com.squareup.wire.schema/Linker.<init>|<init>(com.squareup.wire.schema.Loader;com.squareup.wire.schema.ErrorCollector;kotlin.Boolean;kotlin.Boolean;kotlin.collections.List<com.squareup.wire.schema.ProtoType>){}[0]
    final fun <#A1: kotlin/Any?> resolve(kotlin/String, kotlin.collections/Map<kotlin/String, #A1>): #A1? // com.squareup.wire.schema/Linker.resolve|resolve(kotlin.String;kotlin.collections.Map<kotlin.String,0:0>){0§<kotlin.Any?>}[0]
    final fun addType(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Type) // com.squareup.wire.schema/Linker.addType|addType(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Type){}[0]
    final fun dereference(com.squareup.wire.schema/ProtoType, kotlin/String): com.squareup.wire.schema/Field? // com.squareup.wire.schema/Linker.dereference|dereference(com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
    final fun get(com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/Type? // com.squareup.wire.schema/Linker.get|get(com.squareup.wire.schema.ProtoType){}[0]
    final fun getForOptions(com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/Type? // com.squareup.wire.schema/Linker.getForOptions|getForOptions(com.squareup.wire.schema.ProtoType){}[0]
    final fun link(kotlin.collections/Iterable<com.squareup.wire.schema/ProtoFile>): com.squareup.wire.schema/Schema // com.squareup.wire.schema/Linker.link|link(kotlin.collections.Iterable<com.squareup.wire.schema.ProtoFile>){}[0]
    final fun request(com.squareup.wire.schema/Field) // com.squareup.wire.schema/Linker.request|request(com.squareup.wire.schema.Field){}[0]
    final fun resolveContext(): kotlin/String // com.squareup.wire.schema/Linker.resolveContext|resolveContext(){}[0]
    final fun resolveMessageType(kotlin/String): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Linker.resolveMessageType|resolveMessageType(kotlin.String){}[0]
    final fun resolveType(kotlin/String): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Linker.resolveType|resolveType(kotlin.String){}[0]
    final fun validateEnumConstantNameUniqueness(kotlin.collections/Iterable<com.squareup.wire.schema/Type>) // com.squareup.wire.schema/Linker.validateEnumConstantNameUniqueness|validateEnumConstantNameUniqueness(kotlin.collections.Iterable<com.squareup.wire.schema.Type>){}[0]
    final fun validateFields(kotlin.collections/Iterable<com.squareup.wire.schema/Field>, kotlin.collections/List<com.squareup.wire.schema/Reserved>, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/Linker.validateFields|validateFields(kotlin.collections.Iterable<com.squareup.wire.schema.Field>;kotlin.collections.List<com.squareup.wire.schema.Reserved>;com.squareup.wire.schema.SyntaxRules){}[0]
    final fun validateImportForPath(com.squareup.wire.schema/Location, kotlin/String) // com.squareup.wire.schema/Linker.validateImportForPath|validateImportForPath(com.squareup.wire.schema.Location;kotlin.String){}[0]
    final fun validateImportForType(com.squareup.wire.schema/Location, com.squareup.wire.schema/ProtoType) // com.squareup.wire.schema/Linker.validateImportForType|validateImportForType(com.squareup.wire.schema.Location;com.squareup.wire.schema.ProtoType){}[0]
    final fun withContext(kotlin/Any): com.squareup.wire.schema/Linker // com.squareup.wire.schema/Linker.withContext|withContext(kotlin.Any){}[0]
    final val errors // com.squareup.wire.schema/Linker.errors|{}errors[0]
        final fun <get-errors>(): com.squareup.wire.schema/ErrorCollector // com.squareup.wire.schema/Linker.errors.<get-errors>|<get-errors>(){}[0]
    final val loadExhaustively // com.squareup.wire.schema/Linker.loadExhaustively|{}loadExhaustively[0]
        final fun <get-loadExhaustively>(): kotlin/Boolean // com.squareup.wire.schema/Linker.loadExhaustively.<get-loadExhaustively>|<get-loadExhaustively>(){}[0]
}
final class com.squareup.wire.schema/Location { // com.squareup.wire.schema/Location|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Int =..., kotlin/Int =...) // com.squareup.wire.schema/Location.<init>|<init>(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int){}[0]
    final fun at(kotlin/Int, kotlin/Int): com.squareup.wire.schema/Location // com.squareup.wire.schema/Location.at|at(kotlin.Int;kotlin.Int){}[0]
    final fun component1(): kotlin/String // com.squareup.wire.schema/Location.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/Location.component2|component2(){}[0]
    final fun component3(): kotlin/Int // com.squareup.wire.schema/Location.component3|component3(){}[0]
    final fun component4(): kotlin/Int // com.squareup.wire.schema/Location.component4|component4(){}[0]
    final fun copy(kotlin/String =..., kotlin/String =..., kotlin/Int =..., kotlin/Int =...): com.squareup.wire.schema/Location // com.squareup.wire.schema/Location.copy|copy(kotlin.String;kotlin.String;kotlin.Int;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Location.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Location.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Location.toString|toString(){}[0]
    final fun withPathOnly(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Location.withPathOnly|withPathOnly(){}[0]
    final fun withoutBase(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Location.withoutBase|withoutBase(){}[0]
    final object Companion { // com.squareup.wire.schema/Location.Companion|null[0]
        final fun get(kotlin/String): com.squareup.wire.schema/Location // com.squareup.wire.schema/Location.Companion.get|get(kotlin.String){}[0]
        final fun get(kotlin/String, kotlin/String): com.squareup.wire.schema/Location // com.squareup.wire.schema/Location.Companion.get|get(kotlin.String;kotlin.String){}[0]
    }
    final val base // com.squareup.wire.schema/Location.base|{}base[0]
        final fun <get-base>(): kotlin/String // com.squareup.wire.schema/Location.base.<get-base>|<get-base>(){}[0]
    final val column // com.squareup.wire.schema/Location.column|{}column[0]
        final fun <get-column>(): kotlin/Int // com.squareup.wire.schema/Location.column.<get-column>|<get-column>(){}[0]
    final val line // com.squareup.wire.schema/Location.line|{}line[0]
        final fun <get-line>(): kotlin/Int // com.squareup.wire.schema/Location.line.<get-line>|<get-line>(){}[0]
    final val path // com.squareup.wire.schema/Location.path|{}path[0]
        final fun <get-path>(): kotlin/String // com.squareup.wire.schema/Location.path.<get-path>|<get-path>(){}[0]
}
final class com.squareup.wire.schema/MarkSet { // com.squareup.wire.schema/MarkSet|null[0]
    constructor <init>(com.squareup.wire.schema/PruningRules) // com.squareup.wire.schema/MarkSet.<init>|<init>(com.squareup.wire.schema.PruningRules){}[0]
    final fun contains(com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/MarkSet.contains|contains(com.squareup.wire.schema.ProtoMember){}[0]
    final fun contains(com.squareup.wire.schema/ProtoType): kotlin/Boolean // com.squareup.wire.schema/MarkSet.contains|contains(com.squareup.wire.schema.ProtoType){}[0]
    final fun mark(com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/MarkSet.mark|mark(com.squareup.wire.schema.ProtoMember){}[0]
    final fun mark(com.squareup.wire.schema/ProtoType): kotlin/Boolean // com.squareup.wire.schema/MarkSet.mark|mark(com.squareup.wire.schema.ProtoType){}[0]
    final fun mark(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/MarkSet.mark|mark(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.ProtoMember){}[0]
    final fun root(com.squareup.wire.schema/ProtoMember) // com.squareup.wire.schema/MarkSet.root|root(com.squareup.wire.schema.ProtoMember){}[0]
    final fun root(com.squareup.wire.schema/ProtoType) // com.squareup.wire.schema/MarkSet.root|root(com.squareup.wire.schema.ProtoType){}[0]
    final object Companion // com.squareup.wire.schema/MarkSet.Companion|null[0]
    final val members // com.squareup.wire.schema/MarkSet.members|{}members[0]
        final fun <get-members>(): kotlin.collections/MutableMap<com.squareup.wire.schema/ProtoType, kotlin.collections/MutableSet<com.squareup.wire.schema/ProtoMember>> // com.squareup.wire.schema/MarkSet.members.<get-members>|<get-members>(){}[0]
    final val pruningRules // com.squareup.wire.schema/MarkSet.pruningRules|{}pruningRules[0]
        final fun <get-pruningRules>(): com.squareup.wire.schema/PruningRules // com.squareup.wire.schema/MarkSet.pruningRules.<get-pruningRules>|<get-pruningRules>(){}[0]
    final val types // com.squareup.wire.schema/MarkSet.types|{}types[0]
        final fun <get-types>(): kotlin.collections/MutableSet<com.squareup.wire.schema/ProtoType> // com.squareup.wire.schema/MarkSet.types.<get-types>|<get-types>(){}[0]
}
final class com.squareup.wire.schema/MessageType : com.squareup.wire.schema/Type { // com.squareup.wire.schema/MessageType|null[0]
    constructor <init>(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Location, kotlin/String, kotlin/String, kotlin.collections/List<com.squareup.wire.schema/Field>, kotlin.collections/MutableList<com.squareup.wire.schema/Field>, kotlin.collections/List<com.squareup.wire.schema/OneOf>, kotlin.collections/List<com.squareup.wire.schema/Type>, kotlin.collections/List<com.squareup.wire.schema/Extend>, kotlin.collections/List<com.squareup.wire.schema/Extensions>, kotlin.collections/List<com.squareup.wire.schema/Reserved>, com.squareup.wire.schema/Options, com.squareup.wire/Syntax) // com.squareup.wire.schema/MessageType.<init>|<init>(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Field>;kotlin.collections.MutableList<com.squareup.wire.schema.Field>;kotlin.collections.List<com.squareup.wire.schema.OneOf>;kotlin.collections.List<com.squareup.wire.schema.Type>;kotlin.collections.List<com.squareup.wire.schema.Extend>;kotlin.collections.List<com.squareup.wire.schema.Extensions>;kotlin.collections.List<com.squareup.wire.schema.Reserved>;com.squareup.wire.schema.Options;com.squareup.wire.Syntax){}[0]
    final fun addExtensionFields(kotlin.collections/List<com.squareup.wire.schema/Field>) // com.squareup.wire.schema/MessageType.addExtensionFields|addExtensionFields(kotlin.collections.List<com.squareup.wire.schema.Field>){}[0]
    final fun component1(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/MessageType.component1|component1(){}[0]
    final fun component10(): kotlin.collections/List<com.squareup.wire.schema/Extensions> // com.squareup.wire.schema/MessageType.component10|component10(){}[0]
    final fun component12(): com.squareup.wire.schema/Options // com.squareup.wire.schema/MessageType.component12|component12(){}[0]
    final fun component13(): com.squareup.wire/Syntax // com.squareup.wire.schema/MessageType.component13|component13(){}[0]
    final fun component2(): com.squareup.wire.schema/Location // com.squareup.wire.schema/MessageType.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema/MessageType.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema/MessageType.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.component5|component5(){}[0]
    final fun component6(): kotlin.collections/MutableList<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<com.squareup.wire.schema/OneOf> // com.squareup.wire.schema/MessageType.component7|component7(){}[0]
    final fun component8(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/MessageType.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/MessageType.component9|component9(){}[0]
    final fun copy(com.squareup.wire.schema/ProtoType =..., com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema/Field> =..., kotlin.collections/MutableList<com.squareup.wire.schema/Field> =..., kotlin.collections/List<com.squareup.wire.schema/OneOf> =..., kotlin.collections/List<com.squareup.wire.schema/Type> =..., kotlin.collections/List<com.squareup.wire.schema/Extend> =..., kotlin.collections/List<com.squareup.wire.schema/Extensions> =..., kotlin.collections/List<com.squareup.wire.schema/Reserved> =..., com.squareup.wire.schema/Options =..., com.squareup.wire/Syntax =...): com.squareup.wire.schema/MessageType // com.squareup.wire.schema/MessageType.copy|copy(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Field>;kotlin.collections.MutableList<com.squareup.wire.schema.Field>;kotlin.collections.List<com.squareup.wire.schema.OneOf>;kotlin.collections.List<com.squareup.wire.schema.Type>;kotlin.collections.List<com.squareup.wire.schema.Extend>;kotlin.collections.List<com.squareup.wire.schema.Extensions>;kotlin.collections.List<com.squareup.wire.schema.Reserved>;com.squareup.wire.schema.Options;com.squareup.wire.Syntax){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/MessageType.equals|equals(kotlin.Any?){}[0]
    final fun extensionField(kotlin/String): com.squareup.wire.schema/Field? // com.squareup.wire.schema/MessageType.extensionField|extensionField(kotlin.String){}[0]
    final fun extensionFieldsMap(): kotlin.collections/Map<kotlin/String, com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.extensionFieldsMap|extensionFieldsMap(){}[0]
    final fun field(kotlin/Int): com.squareup.wire.schema/Field? // com.squareup.wire.schema/MessageType.field|field(kotlin.Int){}[0]
    final fun field(kotlin/String): com.squareup.wire.schema/Field? // com.squareup.wire.schema/MessageType.field|field(kotlin.String){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/MessageType.hashCode|hashCode(){}[0]
    final fun linkMembers(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/MessageType.linkMembers|linkMembers(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/MessageType.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    final fun oneOf(kotlin/String): com.squareup.wire.schema/OneOf? // com.squareup.wire.schema/MessageType.oneOf|oneOf(kotlin.String){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Type? // com.squareup.wire.schema/MessageType.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun retainLinked(kotlin.collections/Set<com.squareup.wire.schema/ProtoType>, kotlin.collections/Set<com.squareup.wire.schema/Field>): com.squareup.wire.schema/Type? // com.squareup.wire.schema/MessageType.retainLinked|retainLinked(kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Set<com.squareup.wire.schema.Field>){}[0]
    final fun toElement(): com.squareup.wire.schema.internal.parser/MessageElement // com.squareup.wire.schema/MessageType.toElement|toElement(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/MessageType.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/MessageType.validate|validate(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules){}[0]
    final object Companion { // com.squareup.wire.schema/MessageType.Companion|null[0]
        final fun fromElement(kotlin.collections/List<kotlin/String>, com.squareup.wire.schema/ProtoType, com.squareup.wire.schema.internal.parser/MessageElement, com.squareup.wire/Syntax): com.squareup.wire.schema/MessageType // com.squareup.wire.schema/MessageType.Companion.fromElement|fromElement(kotlin.collections.List<kotlin.String>;com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.internal.parser.MessageElement;com.squareup.wire.Syntax){}[0]
    }
    final val declaredFields // com.squareup.wire.schema/MessageType.declaredFields|{}declaredFields[0]
        final fun <get-declaredFields>(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.declaredFields.<get-declaredFields>|<get-declaredFields>(){}[0]
    final val documentation // com.squareup.wire.schema/MessageType.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/MessageType.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val extensionFields // com.squareup.wire.schema/MessageType.extensionFields|{}extensionFields[0]
        final fun <get-extensionFields>(): kotlin.collections/MutableList<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.extensionFields.<get-extensionFields>|<get-extensionFields>(){}[0]
    final val extensionsList // com.squareup.wire.schema/MessageType.extensionsList|{}extensionsList[0]
        final fun <get-extensionsList>(): kotlin.collections/List<com.squareup.wire.schema/Extensions> // com.squareup.wire.schema/MessageType.extensionsList.<get-extensionsList>|<get-extensionsList>(){}[0]
    final val fields // com.squareup.wire.schema/MessageType.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.fields.<get-fields>|<get-fields>(){}[0]
    final val fieldsAndOneOfFields // com.squareup.wire.schema/MessageType.fieldsAndOneOfFields|<get-fieldsAndOneOfFields>(){}[0]
        final fun <get-fieldsAndOneOfFields>(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.fieldsAndOneOfFields.<get-fieldsAndOneOfFields>|<get-fieldsAndOneOfFields>(){}[0]
    final val isDeprecated // com.squareup.wire.schema/MessageType.isDeprecated|{}isDeprecated[0]
        final fun <get-isDeprecated>(): kotlin/Boolean // com.squareup.wire.schema/MessageType.isDeprecated.<get-isDeprecated>|<get-isDeprecated>(){}[0]
    final val location // com.squareup.wire.schema/MessageType.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/MessageType.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/MessageType.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/MessageType.name.<get-name>|<get-name>(){}[0]
    final val nestedExtendList // com.squareup.wire.schema/MessageType.nestedExtendList|{}nestedExtendList[0]
        final fun <get-nestedExtendList>(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/MessageType.nestedExtendList.<get-nestedExtendList>|<get-nestedExtendList>(){}[0]
    final val nestedTypes // com.squareup.wire.schema/MessageType.nestedTypes|{}nestedTypes[0]
        final fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/MessageType.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    final val oneOfs // com.squareup.wire.schema/MessageType.oneOfs|{}oneOfs[0]
        final fun <get-oneOfs>(): kotlin.collections/List<com.squareup.wire.schema/OneOf> // com.squareup.wire.schema/MessageType.oneOfs.<get-oneOfs>|<get-oneOfs>(){}[0]
    final val options // com.squareup.wire.schema/MessageType.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/MessageType.options.<get-options>|<get-options>(){}[0]
    final val requiredFields // com.squareup.wire.schema/MessageType.requiredFields|{}requiredFields[0]
        final fun <get-requiredFields>(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/MessageType.requiredFields.<get-requiredFields>|<get-requiredFields>(){}[0]
    final val syntax // com.squareup.wire.schema/MessageType.syntax|{}syntax[0]
        final fun <get-syntax>(): com.squareup.wire/Syntax // com.squareup.wire.schema/MessageType.syntax.<get-syntax>|<get-syntax>(){}[0]
    final val type // com.squareup.wire.schema/MessageType.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/MessageType.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/OneOf { // com.squareup.wire.schema/OneOf|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin.collections/List<com.squareup.wire.schema/Field>, com.squareup.wire.schema/Location, com.squareup.wire.schema/Options) // com.squareup.wire.schema/OneOf.<init>|<init>(kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Field>;com.squareup.wire.schema.Location;com.squareup.wire.schema.Options){}[0]
    final fun component1(): kotlin/String // com.squareup.wire.schema/OneOf.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/OneOf.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/OneOf.component3|component3(){}[0]
    final fun component4(): com.squareup.wire.schema/Location // com.squareup.wire.schema/OneOf.component4|component4(){}[0]
    final fun component5(): com.squareup.wire.schema/Options // com.squareup.wire.schema/OneOf.component5|component5(){}[0]
    final fun copy(kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema/Field> =..., com.squareup.wire.schema/Location =..., com.squareup.wire.schema/Options =...): com.squareup.wire.schema/OneOf // com.squareup.wire.schema/OneOf.copy|copy(kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Field>;com.squareup.wire.schema.Location;com.squareup.wire.schema.Options){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/OneOf.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/OneOf.hashCode|hashCode(){}[0]
    final fun link(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/OneOf.link|link(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/OneOf.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet, com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/OneOf? // com.squareup.wire.schema/OneOf.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet;com.squareup.wire.schema.ProtoType){}[0]
    final fun retainLinked(): com.squareup.wire.schema/OneOf? // com.squareup.wire.schema/OneOf.retainLinked|retainLinked(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/OneOf.toString|toString(){}[0]
    final object Companion { // com.squareup.wire.schema/OneOf.Companion|null[0]
        final fun fromElements(kotlin.collections/List<kotlin/String>, kotlin.collections/List<com.squareup.wire.schema.internal.parser/OneOfElement>): kotlin.collections/List<com.squareup.wire.schema/OneOf> // com.squareup.wire.schema/OneOf.Companion.fromElements|fromElements(kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OneOfElement>){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/OneOf>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OneOfElement> // com.squareup.wire.schema/OneOf.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.OneOf>){}[0]
    }
    final val documentation // com.squareup.wire.schema/OneOf.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/OneOf.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val fields // com.squareup.wire.schema/OneOf.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/List<com.squareup.wire.schema/Field> // com.squareup.wire.schema/OneOf.fields.<get-fields>|<get-fields>(){}[0]
    final val location // com.squareup.wire.schema/OneOf.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/OneOf.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/OneOf.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/OneOf.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema/OneOf.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/OneOf.options.<get-options>|<get-options>(){}[0]
}
final class com.squareup.wire.schema/Options { // com.squareup.wire.schema/Options|null[0]
    constructor <init>(com.squareup.wire.schema/ProtoType, kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement>) // com.squareup.wire.schema/Options.<init>|<init>(com.squareup.wire.schema.ProtoType;kotlin.collections.List<com.squareup.wire.schema.internal.parser.OptionElement>){}[0]
    final fun fields(): com.squareup.wire.schema/Multimap<com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/ProtoMember> // com.squareup.wire.schema/Options.fields|fields(){}[0]
    final fun fields(com.squareup.wire.schema/PruningRules): com.squareup.wire.schema/Multimap<com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/ProtoMember> // com.squareup.wire.schema/Options.fields|fields(com.squareup.wire.schema.PruningRules){}[0]
    final fun get(com.squareup.wire.schema/ProtoMember): kotlin/Any? // com.squareup.wire.schema/Options.get|get(com.squareup.wire.schema.ProtoMember){}[0]
    final fun link(com.squareup.wire.schema/Linker, com.squareup.wire.schema/Location, kotlin/Boolean) // com.squareup.wire.schema/Options.link|link(com.squareup.wire.schema.Linker;com.squareup.wire.schema.Location;kotlin.Boolean){}[0]
    final fun optionMatches(kotlin/String, kotlin/String): kotlin/Boolean // com.squareup.wire.schema/Options.optionMatches|optionMatches(kotlin.String;kotlin.String){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Options // com.squareup.wire.schema/Options.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun retainLinked(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Options.retainLinked|retainLinked(){}[0]
    final object Companion { // com.squareup.wire.schema/Options.Companion|null[0]
        final fun resolveFieldPath(kotlin/String, kotlin.collections/Set<kotlin/String?>): kotlin/Array<kotlin/String>? // com.squareup.wire.schema/Options.Companion.resolveFieldPath|resolveFieldPath(kotlin.String;kotlin.collections.Set<kotlin.String?>){}[0]
        final val ENUM_OPTIONS // com.squareup.wire.schema/Options.Companion.ENUM_OPTIONS|{}ENUM_OPTIONS[0]
            final fun <get-ENUM_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.ENUM_OPTIONS.<get-ENUM_OPTIONS>|<get-ENUM_OPTIONS>(){}[0]
        final val ENUM_VALUE_OPTIONS // com.squareup.wire.schema/Options.Companion.ENUM_VALUE_OPTIONS|{}ENUM_VALUE_OPTIONS[0]
            final fun <get-ENUM_VALUE_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.ENUM_VALUE_OPTIONS.<get-ENUM_VALUE_OPTIONS>|<get-ENUM_VALUE_OPTIONS>(){}[0]
        final val FIELD_OPTIONS // com.squareup.wire.schema/Options.Companion.FIELD_OPTIONS|{}FIELD_OPTIONS[0]
            final fun <get-FIELD_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.FIELD_OPTIONS.<get-FIELD_OPTIONS>|<get-FIELD_OPTIONS>(){}[0]
        final val FILE_OPTIONS // com.squareup.wire.schema/Options.Companion.FILE_OPTIONS|{}FILE_OPTIONS[0]
            final fun <get-FILE_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.FILE_OPTIONS.<get-FILE_OPTIONS>|<get-FILE_OPTIONS>(){}[0]
        final val GOOGLE_PROTOBUF_OPTION_TYPES // com.squareup.wire.schema/Options.Companion.GOOGLE_PROTOBUF_OPTION_TYPES|<get-GOOGLE_PROTOBUF_OPTION_TYPES>(){}[0]
            final fun <get-GOOGLE_PROTOBUF_OPTION_TYPES>(): kotlin/Array<com.squareup.wire.schema/ProtoType> // com.squareup.wire.schema/Options.Companion.GOOGLE_PROTOBUF_OPTION_TYPES.<get-GOOGLE_PROTOBUF_OPTION_TYPES>|<get-GOOGLE_PROTOBUF_OPTION_TYPES>(){}[0]
        final val MESSAGE_OPTIONS // com.squareup.wire.schema/Options.Companion.MESSAGE_OPTIONS|{}MESSAGE_OPTIONS[0]
            final fun <get-MESSAGE_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.MESSAGE_OPTIONS.<get-MESSAGE_OPTIONS>|<get-MESSAGE_OPTIONS>(){}[0]
        final val METHOD_OPTIONS // com.squareup.wire.schema/Options.Companion.METHOD_OPTIONS|{}METHOD_OPTIONS[0]
            final fun <get-METHOD_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.METHOD_OPTIONS.<get-METHOD_OPTIONS>|<get-METHOD_OPTIONS>(){}[0]
        final val ONEOF_OPTIONS // com.squareup.wire.schema/Options.Companion.ONEOF_OPTIONS|{}ONEOF_OPTIONS[0]
            final fun <get-ONEOF_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.ONEOF_OPTIONS.<get-ONEOF_OPTIONS>|<get-ONEOF_OPTIONS>(){}[0]
        final val SERVICE_OPTIONS // com.squareup.wire.schema/Options.Companion.SERVICE_OPTIONS|{}SERVICE_OPTIONS[0]
            final fun <get-SERVICE_OPTIONS>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Options.Companion.SERVICE_OPTIONS.<get-SERVICE_OPTIONS>|<get-SERVICE_OPTIONS>(){}[0]
    }
    final val elements // com.squareup.wire.schema/Options.elements|{}elements[0]
        final fun <get-elements>(): kotlin.collections/List<com.squareup.wire.schema.internal.parser/OptionElement> // com.squareup.wire.schema/Options.elements.<get-elements>|<get-elements>(){}[0]
    final val map // com.squareup.wire.schema/Options.map|{}map[0]
        final fun <get-map>(): kotlin.collections/Map<com.squareup.wire.schema/ProtoMember, kotlin/Any?> // com.squareup.wire.schema/Options.map.<get-map>|<get-map>(){}[0]
}
final class com.squareup.wire.schema/Profile { // com.squareup.wire.schema/Profile|null[0]
    constructor <init>(kotlin.collections/List<com.squareup.wire.schema.internal/ProfileFileElement> =...) // com.squareup.wire.schema/Profile.<init>|<init>(kotlin.collections.List<com.squareup.wire.schema.internal.ProfileFileElement>){}[0]
}
final class com.squareup.wire.schema/ProtoFile { // com.squareup.wire.schema/ProtoFile|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin.collections/List<kotlin/String>, kotlin.collections/List<kotlin/String>, kotlin/String?, kotlin.collections/List<com.squareup.wire.schema/Type>, kotlin.collections/List<com.squareup.wire.schema/Service>, kotlin.collections/List<com.squareup.wire.schema/Extend>, com.squareup.wire.schema/Options, com.squareup.wire/Syntax?) // com.squareup.wire.schema/ProtoFile.<init>|<init>(com.squareup.wire.schema.Location;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.String?;kotlin.collections.List<com.squareup.wire.schema.Type>;kotlin.collections.List<com.squareup.wire.schema.Service>;kotlin.collections.List<com.squareup.wire.schema.Extend>;com.squareup.wire.schema.Options;com.squareup.wire.Syntax?){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/ProtoFile.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/ProtoFile.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/ProtoFile.component3|component3(){}[0]
    final fun component4(): kotlin/String? // com.squareup.wire.schema/ProtoFile.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/ProtoFile.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<com.squareup.wire.schema/Service> // com.squareup.wire.schema/ProtoFile.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/ProtoFile.component7|component7(){}[0]
    final fun component8(): com.squareup.wire.schema/Options // com.squareup.wire.schema/ProtoFile.component8|component8(){}[0]
    final fun component9(): com.squareup.wire/Syntax? // com.squareup.wire.schema/ProtoFile.component9|component9(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<kotlin/String> =..., kotlin/String? =..., kotlin.collections/List<com.squareup.wire.schema/Type> =..., kotlin.collections/List<com.squareup.wire.schema/Service> =..., kotlin.collections/List<com.squareup.wire.schema/Extend> =..., com.squareup.wire.schema/Options =..., com.squareup.wire/Syntax? =...): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/ProtoFile.copy|copy(com.squareup.wire.schema.Location;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.String?;kotlin.collections.List<com.squareup.wire.schema.Type>;kotlin.collections.List<com.squareup.wire.schema.Service>;kotlin.collections.List<com.squareup.wire.schema.Extend>;com.squareup.wire.schema.Options;com.squareup.wire.Syntax?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/ProtoFile.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/ProtoFile.hashCode|hashCode(){}[0]
    final fun javaPackage(): kotlin/String? // com.squareup.wire.schema/ProtoFile.javaPackage|javaPackage(){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, kotlin/Boolean) // com.squareup.wire.schema/ProtoFile.linkOptions|linkOptions(com.squareup.wire.schema.Linker;kotlin.Boolean){}[0]
    final fun name(): kotlin/String // com.squareup.wire.schema/ProtoFile.name|name(){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/ProtoFile.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun retainImports(com.squareup.wire.schema/Schema): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/ProtoFile.retainImports|retainImports(com.squareup.wire.schema.Schema){}[0]
    final fun retainImports(kotlin.collections/List<com.squareup.wire.schema/ProtoFile>): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/ProtoFile.retainImports|retainImports(kotlin.collections.List<com.squareup.wire.schema.ProtoFile>){}[0]
    final fun retainLinked(kotlin.collections/Set<com.squareup.wire.schema/ProtoType>, kotlin.collections/Set<com.squareup.wire.schema/Field>): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/ProtoFile.retainLinked|retainLinked(kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Set<com.squareup.wire.schema.Field>){}[0]
    final fun toElement(): com.squareup.wire.schema.internal.parser/ProtoFileElement // com.squareup.wire.schema/ProtoFile.toElement|toElement(){}[0]
    final fun toSchema(): kotlin/String // com.squareup.wire.schema/ProtoFile.toSchema|toSchema(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/ProtoFile.toString|toString(){}[0]
    final fun typesAndNestedTypes(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/ProtoFile.typesAndNestedTypes|typesAndNestedTypes(){}[0]
    final fun wirePackage(): kotlin/String? // com.squareup.wire.schema/ProtoFile.wirePackage|wirePackage(){}[0]
    final object Companion { // com.squareup.wire.schema/ProtoFile.Companion|null[0]
        final fun get(com.squareup.wire.schema.internal.parser/ProtoFileElement): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/ProtoFile.Companion.get|get(com.squareup.wire.schema.internal.parser.ProtoFileElement){}[0]
        final val JAVA_PACKAGE // com.squareup.wire.schema/ProtoFile.Companion.JAVA_PACKAGE|<get-JAVA_PACKAGE>(){}[0]
            final fun <get-JAVA_PACKAGE>(): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/ProtoFile.Companion.JAVA_PACKAGE.<get-JAVA_PACKAGE>|<get-JAVA_PACKAGE>(){}[0]
        final val WIRE_PACKAGE // com.squareup.wire.schema/ProtoFile.Companion.WIRE_PACKAGE|<get-WIRE_PACKAGE>(){}[0]
            final fun <get-WIRE_PACKAGE>(): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/ProtoFile.Companion.WIRE_PACKAGE.<get-WIRE_PACKAGE>|<get-WIRE_PACKAGE>(){}[0]
    }
    final val extendList // com.squareup.wire.schema/ProtoFile.extendList|{}extendList[0]
        final fun <get-extendList>(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/ProtoFile.extendList.<get-extendList>|<get-extendList>(){}[0]
    final val imports // com.squareup.wire.schema/ProtoFile.imports|{}imports[0]
        final fun <get-imports>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/ProtoFile.imports.<get-imports>|<get-imports>(){}[0]
    final val location // com.squareup.wire.schema/ProtoFile.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/ProtoFile.location.<get-location>|<get-location>(){}[0]
    final val options // com.squareup.wire.schema/ProtoFile.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/ProtoFile.options.<get-options>|<get-options>(){}[0]
    final val packageName // com.squareup.wire.schema/ProtoFile.packageName|{}packageName[0]
        final fun <get-packageName>(): kotlin/String? // com.squareup.wire.schema/ProtoFile.packageName.<get-packageName>|<get-packageName>(){}[0]
    final val publicImports // com.squareup.wire.schema/ProtoFile.publicImports|{}publicImports[0]
        final fun <get-publicImports>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/ProtoFile.publicImports.<get-publicImports>|<get-publicImports>(){}[0]
    final val services // com.squareup.wire.schema/ProtoFile.services|{}services[0]
        final fun <get-services>(): kotlin.collections/List<com.squareup.wire.schema/Service> // com.squareup.wire.schema/ProtoFile.services.<get-services>|<get-services>(){}[0]
    final val syntax // com.squareup.wire.schema/ProtoFile.syntax|{}syntax[0]
        final fun <get-syntax>(): com.squareup.wire/Syntax? // com.squareup.wire.schema/ProtoFile.syntax.<get-syntax>|<get-syntax>(){}[0]
    final val types // com.squareup.wire.schema/ProtoFile.types|{}types[0]
        final fun <get-types>(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/ProtoFile.types.<get-types>|<get-types>(){}[0]
}
final class com.squareup.wire.schema/ProtoMember { // com.squareup.wire.schema/ProtoMember|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/ProtoMember.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/ProtoMember.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/ProtoMember.toString|toString(){}[0]
    final object Companion { // com.squareup.wire.schema/ProtoMember.Companion|null[0]
        final fun get(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Field): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/ProtoMember.Companion.get|get(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Field){}[0]
        final fun get(com.squareup.wire.schema/ProtoType, kotlin/String): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/ProtoMember.Companion.get|get(com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
        final fun get(kotlin/String): com.squareup.wire.schema/ProtoMember // com.squareup.wire.schema/ProtoMember.Companion.get|get(kotlin.String){}[0]
    }
    final val member // com.squareup.wire.schema/ProtoMember.member|{}member[0]
        final fun <get-member>(): kotlin/String // com.squareup.wire.schema/ProtoMember.member.<get-member>|<get-member>(){}[0]
    final val simpleName // com.squareup.wire.schema/ProtoMember.simpleName|{}simpleName[0]
        final fun <get-simpleName>(): kotlin/String // com.squareup.wire.schema/ProtoMember.simpleName.<get-simpleName>|<get-simpleName>(){}[0]
    final val type // com.squareup.wire.schema/ProtoMember.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoMember.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/ProtoType { // com.squareup.wire.schema/ProtoType|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/ProtoType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/ProtoType.hashCode|hashCode(){}[0]
    final fun nestedType(kotlin/String?): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.nestedType|nestedType(kotlin.String?){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/ProtoType.toString|toString(){}[0]
    final object Companion { // com.squareup.wire.schema/ProtoType.Companion|null[0]
        final fun get(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/ProtoType, kotlin/String): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.get|get(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
        final fun get(kotlin/String?): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.get|get(kotlin.String?){}[0]
        final fun get(kotlin/String?, kotlin/String): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.get|get(kotlin.String?;kotlin.String){}[0]
        final val ANY // com.squareup.wire.schema/ProtoType.Companion.ANY|{}ANY[0]
            final fun <get-ANY>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.ANY.<get-ANY>|<get-ANY>(){}[0]
        final val BOOL // com.squareup.wire.schema/ProtoType.Companion.BOOL|{}BOOL[0]
            final fun <get-BOOL>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.BOOL.<get-BOOL>|<get-BOOL>(){}[0]
        final val BOOL_VALUE // com.squareup.wire.schema/ProtoType.Companion.BOOL_VALUE|{}BOOL_VALUE[0]
            final fun <get-BOOL_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.BOOL_VALUE.<get-BOOL_VALUE>|<get-BOOL_VALUE>(){}[0]
        final val BYTES // com.squareup.wire.schema/ProtoType.Companion.BYTES|<get-BYTES>(){}[0]
            final fun <get-BYTES>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.BYTES.<get-BYTES>|<get-BYTES>(){}[0]
        final val BYTES_VALUE // com.squareup.wire.schema/ProtoType.Companion.BYTES_VALUE|{}BYTES_VALUE[0]
            final fun <get-BYTES_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.BYTES_VALUE.<get-BYTES_VALUE>|<get-BYTES_VALUE>(){}[0]
        final val DOUBLE // com.squareup.wire.schema/ProtoType.Companion.DOUBLE|<get-DOUBLE>(){}[0]
            final fun <get-DOUBLE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.DOUBLE.<get-DOUBLE>|<get-DOUBLE>(){}[0]
        final val DOUBLE_VALUE // com.squareup.wire.schema/ProtoType.Companion.DOUBLE_VALUE|{}DOUBLE_VALUE[0]
            final fun <get-DOUBLE_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.DOUBLE_VALUE.<get-DOUBLE_VALUE>|<get-DOUBLE_VALUE>(){}[0]
        final val DURATION // com.squareup.wire.schema/ProtoType.Companion.DURATION|{}DURATION[0]
            final fun <get-DURATION>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.DURATION.<get-DURATION>|<get-DURATION>(){}[0]
        final val EMPTY // com.squareup.wire.schema/ProtoType.Companion.EMPTY|{}EMPTY[0]
            final fun <get-EMPTY>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.EMPTY.<get-EMPTY>|<get-EMPTY>(){}[0]
        final val FIXED32 // com.squareup.wire.schema/ProtoType.Companion.FIXED32|{}FIXED32[0]
            final fun <get-FIXED32>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.FIXED32.<get-FIXED32>|<get-FIXED32>(){}[0]
        final val FIXED64 // com.squareup.wire.schema/ProtoType.Companion.FIXED64|{}FIXED64[0]
            final fun <get-FIXED64>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.FIXED64.<get-FIXED64>|<get-FIXED64>(){}[0]
        final val FLOAT // com.squareup.wire.schema/ProtoType.Companion.FLOAT|<get-FLOAT>(){}[0]
            final fun <get-FLOAT>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.FLOAT.<get-FLOAT>|<get-FLOAT>(){}[0]
        final val FLOAT_VALUE // com.squareup.wire.schema/ProtoType.Companion.FLOAT_VALUE|{}FLOAT_VALUE[0]
            final fun <get-FLOAT_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.FLOAT_VALUE.<get-FLOAT_VALUE>|<get-FLOAT_VALUE>(){}[0]
        final val INT32 // com.squareup.wire.schema/ProtoType.Companion.INT32|{}INT32[0]
            final fun <get-INT32>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.INT32.<get-INT32>|<get-INT32>(){}[0]
        final val INT32_VALUE // com.squareup.wire.schema/ProtoType.Companion.INT32_VALUE|{}INT32_VALUE[0]
            final fun <get-INT32_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.INT32_VALUE.<get-INT32_VALUE>|<get-INT32_VALUE>(){}[0]
        final val INT64 // com.squareup.wire.schema/ProtoType.Companion.INT64|{}INT64[0]
            final fun <get-INT64>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.INT64.<get-INT64>|<get-INT64>(){}[0]
        final val INT64_VALUE // com.squareup.wire.schema/ProtoType.Companion.INT64_VALUE|{}INT64_VALUE[0]
            final fun <get-INT64_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.INT64_VALUE.<get-INT64_VALUE>|<get-INT64_VALUE>(){}[0]
        final val SFIXED32 // com.squareup.wire.schema/ProtoType.Companion.SFIXED32|{}SFIXED32[0]
            final fun <get-SFIXED32>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.SFIXED32.<get-SFIXED32>|<get-SFIXED32>(){}[0]
        final val SFIXED64 // com.squareup.wire.schema/ProtoType.Companion.SFIXED64|{}SFIXED64[0]
            final fun <get-SFIXED64>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.SFIXED64.<get-SFIXED64>|<get-SFIXED64>(){}[0]
        final val SINT32 // com.squareup.wire.schema/ProtoType.Companion.SINT32|{}SINT32[0]
            final fun <get-SINT32>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.SINT32.<get-SINT32>|<get-SINT32>(){}[0]
        final val SINT64 // com.squareup.wire.schema/ProtoType.Companion.SINT64|{}SINT64[0]
            final fun <get-SINT64>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.SINT64.<get-SINT64>|<get-SINT64>(){}[0]
        final val STRING // com.squareup.wire.schema/ProtoType.Companion.STRING|{}STRING[0]
            final fun <get-STRING>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.STRING.<get-STRING>|<get-STRING>(){}[0]
        final val STRING_VALUE // com.squareup.wire.schema/ProtoType.Companion.STRING_VALUE|{}STRING_VALUE[0]
            final fun <get-STRING_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.STRING_VALUE.<get-STRING_VALUE>|<get-STRING_VALUE>(){}[0]
        final val STRUCT_LIST // com.squareup.wire.schema/ProtoType.Companion.STRUCT_LIST|{}STRUCT_LIST[0]
            final fun <get-STRUCT_LIST>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.STRUCT_LIST.<get-STRUCT_LIST>|<get-STRUCT_LIST>(){}[0]
        final val STRUCT_MAP // com.squareup.wire.schema/ProtoType.Companion.STRUCT_MAP|{}STRUCT_MAP[0]
            final fun <get-STRUCT_MAP>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.STRUCT_MAP.<get-STRUCT_MAP>|<get-STRUCT_MAP>(){}[0]
        final val STRUCT_NULL // com.squareup.wire.schema/ProtoType.Companion.STRUCT_NULL|{}STRUCT_NULL[0]
            final fun <get-STRUCT_NULL>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.STRUCT_NULL.<get-STRUCT_NULL>|<get-STRUCT_NULL>(){}[0]
        final val STRUCT_VALUE // com.squareup.wire.schema/ProtoType.Companion.STRUCT_VALUE|{}STRUCT_VALUE[0]
            final fun <get-STRUCT_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.STRUCT_VALUE.<get-STRUCT_VALUE>|<get-STRUCT_VALUE>(){}[0]
        final val TIMESTAMP // com.squareup.wire.schema/ProtoType.Companion.TIMESTAMP|{}TIMESTAMP[0]
            final fun <get-TIMESTAMP>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.TIMESTAMP.<get-TIMESTAMP>|<get-TIMESTAMP>(){}[0]
        final val UINT32 // com.squareup.wire.schema/ProtoType.Companion.UINT32|{}UINT32[0]
            final fun <get-UINT32>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.UINT32.<get-UINT32>|<get-UINT32>(){}[0]
        final val UINT32_VALUE // com.squareup.wire.schema/ProtoType.Companion.UINT32_VALUE|{}UINT32_VALUE[0]
            final fun <get-UINT32_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.UINT32_VALUE.<get-UINT32_VALUE>|<get-UINT32_VALUE>(){}[0]
        final val UINT64 // com.squareup.wire.schema/ProtoType.Companion.UINT64|{}UINT64[0]
            final fun <get-UINT64>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.UINT64.<get-UINT64>|<get-UINT64>(){}[0]
        final val UINT64_VALUE // com.squareup.wire.schema/ProtoType.Companion.UINT64_VALUE|{}UINT64_VALUE[0]
            final fun <get-UINT64_VALUE>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/ProtoType.Companion.UINT64_VALUE.<get-UINT64_VALUE>|<get-UINT64_VALUE>(){}[0]
    }
    final val enclosingTypeOrPackage // com.squareup.wire.schema/ProtoType.enclosingTypeOrPackage|{}enclosingTypeOrPackage[0]
        final fun <get-enclosingTypeOrPackage>(): kotlin/String? // com.squareup.wire.schema/ProtoType.enclosingTypeOrPackage.<get-enclosingTypeOrPackage>|<get-enclosingTypeOrPackage>(){}[0]
    final val isMap // com.squareup.wire.schema/ProtoType.isMap|{}isMap[0]
        final fun <get-isMap>(): kotlin/Boolean // com.squareup.wire.schema/ProtoType.isMap.<get-isMap>|<get-isMap>(){}[0]
    final val isScalar // com.squareup.wire.schema/ProtoType.isScalar|{}isScalar[0]
        final fun <get-isScalar>(): kotlin/Boolean // com.squareup.wire.schema/ProtoType.isScalar.<get-isScalar>|<get-isScalar>(){}[0]
    final val isWrapper // com.squareup.wire.schema/ProtoType.isWrapper|{}isWrapper[0]
        final fun <get-isWrapper>(): kotlin/Boolean // com.squareup.wire.schema/ProtoType.isWrapper.<get-isWrapper>|<get-isWrapper>(){}[0]
    final val keyType // com.squareup.wire.schema/ProtoType.keyType|{}keyType[0]
        final fun <get-keyType>(): com.squareup.wire.schema/ProtoType? // com.squareup.wire.schema/ProtoType.keyType.<get-keyType>|<get-keyType>(){}[0]
    final val simpleName // com.squareup.wire.schema/ProtoType.simpleName|{}simpleName[0]
        final fun <get-simpleName>(): kotlin/String // com.squareup.wire.schema/ProtoType.simpleName.<get-simpleName>|<get-simpleName>(){}[0]
    final val typeUrl // com.squareup.wire.schema/ProtoType.typeUrl|{}typeUrl[0]
        final fun <get-typeUrl>(): kotlin/String? // com.squareup.wire.schema/ProtoType.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]
    final val valueType // com.squareup.wire.schema/ProtoType.valueType|{}valueType[0]
        final fun <get-valueType>(): com.squareup.wire.schema/ProtoType? // com.squareup.wire.schema/ProtoType.valueType.<get-valueType>|<get-valueType>(){}[0]
}
final class com.squareup.wire.schema/Pruner { // com.squareup.wire.schema/Pruner|null[0]
    constructor <init>(com.squareup.wire.schema/Schema, com.squareup.wire.schema/PruningRules) // com.squareup.wire.schema/Pruner.<init>|<init>(com.squareup.wire.schema.Schema;com.squareup.wire.schema.PruningRules){}[0]
    final fun prune(): com.squareup.wire.schema/Schema // com.squareup.wire.schema/Pruner.prune|prune(){}[0]
}
final class com.squareup.wire.schema/PruningRules { // com.squareup.wire.schema/PruningRules|null[0]
    final class Builder { // com.squareup.wire.schema/PruningRules.Builder|null[0]
        constructor <init>() // com.squareup.wire.schema/PruningRules.Builder.<init>|<init>(){}[0]
        final fun addRoot(kotlin.collections/Iterable<kotlin/String>): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.addRoot|addRoot(kotlin.collections.Iterable<kotlin.String>){}[0]
        final fun addRoot(kotlin/String): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.addRoot|addRoot(kotlin.String){}[0]
        final fun build(): com.squareup.wire.schema/PruningRules // com.squareup.wire.schema/PruningRules.Builder.build|build(){}[0]
        final fun only(kotlin/String?): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.only|only(kotlin.String?){}[0]
        final fun prune(kotlin.collections/Iterable<kotlin/String>): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.prune|prune(kotlin.collections.Iterable<kotlin.String>){}[0]
        final fun prune(kotlin/String): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.prune|prune(kotlin.String){}[0]
        final fun since(kotlin/String?): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.since|since(kotlin.String?){}[0]
        final fun until(kotlin/String?): com.squareup.wire.schema/PruningRules.Builder // com.squareup.wire.schema/PruningRules.Builder.until|until(kotlin.String?){}[0]
    }
    final fun isEnumConstantRetainedVersion(com.squareup.wire.schema/Options): kotlin/Boolean // com.squareup.wire.schema/PruningRules.isEnumConstantRetainedVersion|isEnumConstantRetainedVersion(com.squareup.wire.schema.Options){}[0]
    final fun isFieldRetainedVersion(com.squareup.wire.schema/Options): kotlin/Boolean // com.squareup.wire.schema/PruningRules.isFieldRetainedVersion|isFieldRetainedVersion(com.squareup.wire.schema.Options){}[0]
    final fun isRoot(com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/PruningRules.isRoot|isRoot(com.squareup.wire.schema.ProtoMember){}[0]
    final fun isRoot(com.squareup.wire.schema/ProtoType): kotlin/Boolean // com.squareup.wire.schema/PruningRules.isRoot|isRoot(com.squareup.wire.schema.ProtoType){}[0]
    final fun prunes(com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/PruningRules.prunes|prunes(com.squareup.wire.schema.ProtoMember){}[0]
    final fun prunes(com.squareup.wire.schema/ProtoType): kotlin/Boolean // com.squareup.wire.schema/PruningRules.prunes|prunes(com.squareup.wire.schema.ProtoType){}[0]
    final fun unusedPrunes(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/PruningRules.unusedPrunes|unusedPrunes(){}[0]
    final fun unusedRoots(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/PruningRules.unusedRoots|unusedRoots(){}[0]
    final object Companion // com.squareup.wire.schema/PruningRules.Companion|null[0]
    final val isEmpty // com.squareup.wire.schema/PruningRules.isEmpty|{}isEmpty[0]
        final fun <get-isEmpty>(): kotlin/Boolean // com.squareup.wire.schema/PruningRules.isEmpty.<get-isEmpty>|<get-isEmpty>(){}[0]
    final val only // com.squareup.wire.schema/PruningRules.only|{}only[0]
        final fun <get-only>(): kotlin/String? // com.squareup.wire.schema/PruningRules.only.<get-only>|<get-only>(){}[0]
    final val prunes // com.squareup.wire.schema/PruningRules.prunes|{}prunes[0]
        final fun <get-prunes>(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/PruningRules.prunes.<get-prunes>|<get-prunes>(){}[0]
    final val roots // com.squareup.wire.schema/PruningRules.roots|{}roots[0]
        final fun <get-roots>(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/PruningRules.roots.<get-roots>|<get-roots>(){}[0]
    final val since // com.squareup.wire.schema/PruningRules.since|{}since[0]
        final fun <get-since>(): kotlin/String? // com.squareup.wire.schema/PruningRules.since.<get-since>|<get-since>(){}[0]
    final val until // com.squareup.wire.schema/PruningRules.until|{}until[0]
        final fun <get-until>(): kotlin/String? // com.squareup.wire.schema/PruningRules.until.<get-until>|<get-until>(){}[0]
}
final class com.squareup.wire.schema/Reserved { // com.squareup.wire.schema/Reserved|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin.collections/List<kotlin/Any>) // com.squareup.wire.schema/Reserved.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Reserved.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/Reserved.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema/Reserved.component3|component3(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin.collections/List<kotlin/Any> =...): com.squareup.wire.schema/Reserved // com.squareup.wire.schema/Reserved.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.collections.List<kotlin.Any>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Reserved.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Reserved.hashCode|hashCode(){}[0]
    final fun matchesName(kotlin/String): kotlin/Boolean // com.squareup.wire.schema/Reserved.matchesName|matchesName(kotlin.String){}[0]
    final fun matchesTag(kotlin/Int): kotlin/Boolean // com.squareup.wire.schema/Reserved.matchesTag|matchesTag(kotlin.Int){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Reserved.toString|toString(){}[0]
    final object Companion { // com.squareup.wire.schema/Reserved.Companion|null[0]
        final fun fromElements(kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement>): kotlin.collections/List<com.squareup.wire.schema/Reserved> // com.squareup.wire.schema/Reserved.Companion.fromElements|fromElements(kotlin.collections.List<com.squareup.wire.schema.internal.parser.ReservedElement>){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/Reserved>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/ReservedElement> // com.squareup.wire.schema/Reserved.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.Reserved>){}[0]
    }
    final val documentation // com.squareup.wire.schema/Reserved.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Reserved.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema/Reserved.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Reserved.location.<get-location>|<get-location>(){}[0]
    final val values // com.squareup.wire.schema/Reserved.values|{}values[0]
        final fun <get-values>(): kotlin.collections/List<kotlin/Any> // com.squareup.wire.schema/Reserved.values.<get-values>|<get-values>(){}[0]
}
final class com.squareup.wire.schema/Rpc { // com.squareup.wire.schema/Rpc|null[0]
    constructor <init>(com.squareup.wire.schema/Location, kotlin/String, kotlin/String, kotlin/String, kotlin/String, kotlin/Boolean, kotlin/Boolean, com.squareup.wire.schema/Options) // com.squareup.wire.schema/Rpc.<init>|<init>(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.Boolean;kotlin.Boolean;com.squareup.wire.schema.Options){}[0]
    final fun component1(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Rpc.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.squareup.wire.schema/Rpc.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema/Rpc.component3|component3(){}[0]
    final fun component6(): kotlin/Boolean // com.squareup.wire.schema/Rpc.component6|component6(){}[0]
    final fun component7(): kotlin/Boolean // com.squareup.wire.schema/Rpc.component7|component7(){}[0]
    final fun component8(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Rpc.component8|component8(){}[0]
    final fun copy(com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin/String =..., kotlin/String =..., kotlin/Boolean =..., kotlin/Boolean =..., com.squareup.wire.schema/Options =...): com.squareup.wire.schema/Rpc // com.squareup.wire.schema/Rpc.copy|copy(com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.String;kotlin.String;kotlin.Boolean;kotlin.Boolean;com.squareup.wire.schema.Options){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Rpc.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Rpc.hashCode|hashCode(){}[0]
    final fun link(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Rpc.link|link(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, kotlin/Boolean) // com.squareup.wire.schema/Rpc.linkOptions|linkOptions(com.squareup.wire.schema.Linker;kotlin.Boolean){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Rpc? // com.squareup.wire.schema/Rpc.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Rpc.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Rpc.validate|validate(com.squareup.wire.schema.Linker){}[0]
    final object Companion { // com.squareup.wire.schema/Rpc.Companion|null[0]
        final fun fromElements(kotlin.collections/List<com.squareup.wire.schema.internal.parser/RpcElement>): kotlin.collections/List<com.squareup.wire.schema/Rpc> // com.squareup.wire.schema/Rpc.Companion.fromElements|fromElements(kotlin.collections.List<com.squareup.wire.schema.internal.parser.RpcElement>){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/Rpc>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/RpcElement> // com.squareup.wire.schema/Rpc.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.Rpc>){}[0]
    }
    final val documentation // com.squareup.wire.schema/Rpc.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Rpc.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema/Rpc.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Rpc.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/Rpc.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/Rpc.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema/Rpc.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Rpc.options.<get-options>|<get-options>(){}[0]
    final val requestStreaming // com.squareup.wire.schema/Rpc.requestStreaming|{}requestStreaming[0]
        final fun <get-requestStreaming>(): kotlin/Boolean // com.squareup.wire.schema/Rpc.requestStreaming.<get-requestStreaming>|<get-requestStreaming>(){}[0]
    final val responseStreaming // com.squareup.wire.schema/Rpc.responseStreaming|{}responseStreaming[0]
        final fun <get-responseStreaming>(): kotlin/Boolean // com.squareup.wire.schema/Rpc.responseStreaming.<get-responseStreaming>|<get-responseStreaming>(){}[0]
    final var requestType // com.squareup.wire.schema/Rpc.requestType|{}requestType[0]
        final fun <get-requestType>(): com.squareup.wire.schema/ProtoType? // com.squareup.wire.schema/Rpc.requestType.<get-requestType>|<get-requestType>(){}[0]
    final var responseType // com.squareup.wire.schema/Rpc.responseType|{}responseType[0]
        final fun <get-responseType>(): com.squareup.wire.schema/ProtoType? // com.squareup.wire.schema/Rpc.responseType.<get-responseType>|<get-responseType>(){}[0]
}
final class com.squareup.wire.schema/Schema { // com.squareup.wire.schema/Schema|null[0]
    final fun getField(com.squareup.wire.schema/ProtoMember): com.squareup.wire.schema/Field? // com.squareup.wire.schema/Schema.getField|getField(com.squareup.wire.schema.ProtoMember){}[0]
    final fun getField(com.squareup.wire.schema/ProtoType, kotlin/String): com.squareup.wire.schema/Field? // com.squareup.wire.schema/Schema.getField|getField(com.squareup.wire.schema.ProtoType;kotlin.String){}[0]
    final fun getField(kotlin/String, kotlin/String): com.squareup.wire.schema/Field? // com.squareup.wire.schema/Schema.getField|getField(kotlin.String;kotlin.String){}[0]
    final fun getService(com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/Service? // com.squareup.wire.schema/Schema.getService|getService(com.squareup.wire.schema.ProtoType){}[0]
    final fun getService(kotlin/String): com.squareup.wire.schema/Service? // com.squareup.wire.schema/Schema.getService|getService(kotlin.String){}[0]
    final fun getType(com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/Type? // com.squareup.wire.schema/Schema.getType|getType(com.squareup.wire.schema.ProtoType){}[0]
    final fun getType(kotlin/String): com.squareup.wire.schema/Type? // com.squareup.wire.schema/Schema.getType|getType(kotlin.String){}[0]
    final fun isExtensionField(com.squareup.wire.schema/ProtoMember): kotlin/Boolean // com.squareup.wire.schema/Schema.isExtensionField|isExtensionField(com.squareup.wire.schema.ProtoMember){}[0]
    final fun protoAdapter(kotlin/String, kotlin/Boolean): com.squareup.wire/ProtoAdapter<kotlin/Any> // com.squareup.wire.schema/Schema.protoAdapter|protoAdapter(kotlin.String;kotlin.Boolean){}[0]
    final fun protoFile(com.squareup.wire.schema/ProtoType): com.squareup.wire.schema/ProtoFile? // com.squareup.wire.schema/Schema.protoFile|protoFile(com.squareup.wire.schema.ProtoType){}[0]
    final fun protoFile(kotlin/String): com.squareup.wire.schema/ProtoFile? // com.squareup.wire.schema/Schema.protoFile|protoFile(kotlin.String){}[0]
    final fun protoFile(okio/Path): com.squareup.wire.schema/ProtoFile? // com.squareup.wire.schema/Schema.protoFile|protoFile(okio.Path){}[0]
    final fun prune(com.squareup.wire.schema/PruningRules): com.squareup.wire.schema/Schema // com.squareup.wire.schema/Schema.prune|prune(com.squareup.wire.schema.PruningRules){}[0]
    final object Companion // com.squareup.wire.schema/Schema.Companion|null[0]
    final val protoFiles // com.squareup.wire.schema/Schema.protoFiles|{}protoFiles[0]
        final fun <get-protoFiles>(): kotlin.collections/List<com.squareup.wire.schema/ProtoFile> // com.squareup.wire.schema/Schema.protoFiles.<get-protoFiles>|<get-protoFiles>(){}[0]
    final val types // com.squareup.wire.schema/Schema.types|{}types[0]
        final fun <get-types>(): kotlin.collections/Set<com.squareup.wire.schema/ProtoType> // com.squareup.wire.schema/Schema.types.<get-types>|<get-types>(){}[0]
}
final class com.squareup.wire.schema/SchemaException : kotlin/RuntimeException { // com.squareup.wire.schema/SchemaException|null[0]
    constructor <init>(kotlin.collections/List<kotlin/String>) // com.squareup.wire.schema/SchemaException.<init>|<init>(kotlin.collections.List<kotlin.String>){}[0]
}
final class com.squareup.wire.schema/SchemaLoader : com.squareup.wire.schema/Loader, com.squareup.wire.schema/ProfileLoader { // com.squareup.wire.schema/SchemaLoader|null[0]
    constructor <init>(okio/FileSystem) // com.squareup.wire.schema/SchemaLoader.<init>|<init>(okio.FileSystem){}[0]
    final fun initRoots(kotlin.collections/List<com.squareup.wire.schema/Location>, kotlin.collections/List<com.squareup.wire.schema/Location> =...) // com.squareup.wire.schema/SchemaLoader.initRoots|initRoots(kotlin.collections.List<com.squareup.wire.schema.Location>;kotlin.collections.List<com.squareup.wire.schema.Location>){}[0]
    final fun load(kotlin/String): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/SchemaLoader.load|load(kotlin.String){}[0]
    final fun loadProfile(kotlin/String, com.squareup.wire.schema/Schema): com.squareup.wire.schema/Profile // com.squareup.wire.schema/SchemaLoader.loadProfile|loadProfile(kotlin.String;com.squareup.wire.schema.Schema){}[0]
    final fun loadSchema(): com.squareup.wire.schema/Schema // com.squareup.wire.schema/SchemaLoader.loadSchema|loadSchema(){}[0]
    final fun withErrors(com.squareup.wire.schema/ErrorCollector): com.squareup.wire.schema/SchemaLoader // com.squareup.wire.schema/SchemaLoader.withErrors|withErrors(com.squareup.wire.schema.ErrorCollector){}[0]
    final val sourcePathFiles // com.squareup.wire.schema/SchemaLoader.sourcePathFiles|{}sourcePathFiles[0]
        final fun <get-sourcePathFiles>(): kotlin.collections/List<com.squareup.wire.schema/ProtoFile> // com.squareup.wire.schema/SchemaLoader.sourcePathFiles.<get-sourcePathFiles>|<get-sourcePathFiles>(){}[0]
    final var loadExhaustively // com.squareup.wire.schema/SchemaLoader.loadExhaustively|{}loadExhaustively[0]
        final fun <get-loadExhaustively>(): kotlin/Boolean // com.squareup.wire.schema/SchemaLoader.loadExhaustively.<get-loadExhaustively>|<get-loadExhaustively>(){}[0]
        final fun <set-loadExhaustively>(kotlin/Boolean) // com.squareup.wire.schema/SchemaLoader.loadExhaustively.<set-loadExhaustively>|<set-loadExhaustively>(kotlin.Boolean){}[0]
    final var opaqueTypes // com.squareup.wire.schema/SchemaLoader.opaqueTypes|{}opaqueTypes[0]
        final fun <get-opaqueTypes>(): kotlin.collections/List<com.squareup.wire.schema/ProtoType> // com.squareup.wire.schema/SchemaLoader.opaqueTypes.<get-opaqueTypes>|<get-opaqueTypes>(){}[0]
        final fun <set-opaqueTypes>(kotlin.collections/List<com.squareup.wire.schema/ProtoType>) // com.squareup.wire.schema/SchemaLoader.opaqueTypes.<set-opaqueTypes>|<set-opaqueTypes>(kotlin.collections.List<com.squareup.wire.schema.ProtoType>){}[0]
    final var permitPackageCycles // com.squareup.wire.schema/SchemaLoader.permitPackageCycles|{}permitPackageCycles[0]
        final fun <get-permitPackageCycles>(): kotlin/Boolean // com.squareup.wire.schema/SchemaLoader.permitPackageCycles.<get-permitPackageCycles>|<get-permitPackageCycles>(){}[0]
        final fun <set-permitPackageCycles>(kotlin/Boolean) // com.squareup.wire.schema/SchemaLoader.permitPackageCycles.<set-permitPackageCycles>|<set-permitPackageCycles>(kotlin.Boolean){}[0]
}
final class com.squareup.wire.schema/Service { // com.squareup.wire.schema/Service|null[0]
    constructor <init>(com.squareup.wire.schema/ProtoType, com.squareup.wire.schema/Location, kotlin/String, kotlin/String, kotlin.collections/List<com.squareup.wire.schema/Rpc>, com.squareup.wire.schema/Options) // com.squareup.wire.schema/Service.<init>|<init>(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Rpc>;com.squareup.wire.schema.Options){}[0]
    final fun component1(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Service.component1|component1(){}[0]
    final fun component2(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Service.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.squareup.wire.schema/Service.component3|component3(){}[0]
    final fun component4(): kotlin/String // com.squareup.wire.schema/Service.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<com.squareup.wire.schema/Rpc> // com.squareup.wire.schema/Service.component5|component5(){}[0]
    final fun component6(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Service.component6|component6(){}[0]
    final fun copy(com.squareup.wire.schema/ProtoType =..., com.squareup.wire.schema/Location =..., kotlin/String =..., kotlin/String =..., kotlin.collections/List<com.squareup.wire.schema/Rpc> =..., com.squareup.wire.schema/Options =...): com.squareup.wire.schema/Service // com.squareup.wire.schema/Service.copy|copy(com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.Location;kotlin.String;kotlin.String;kotlin.collections.List<com.squareup.wire.schema.Rpc>;com.squareup.wire.schema.Options){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/Service.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.squareup.wire.schema/Service.hashCode|hashCode(){}[0]
    final fun link(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Service.link|link(com.squareup.wire.schema.Linker){}[0]
    final fun linkOptions(com.squareup.wire.schema/Linker, kotlin/Boolean) // com.squareup.wire.schema/Service.linkOptions|linkOptions(com.squareup.wire.schema.Linker;kotlin.Boolean){}[0]
    final fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Service? // com.squareup.wire.schema/Service.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    final fun rpc(kotlin/String): com.squareup.wire.schema/Rpc? // com.squareup.wire.schema/Service.rpc|rpc(kotlin.String){}[0]
    final fun toString(): kotlin/String // com.squareup.wire.schema/Service.toString|toString(){}[0]
    final fun validate(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Service.validate|validate(com.squareup.wire.schema.Linker){}[0]
    final object Companion // com.squareup.wire.schema/Service.Companion|null[0]
    final val documentation // com.squareup.wire.schema/Service.documentation|{}documentation[0]
        final fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Service.documentation.<get-documentation>|<get-documentation>(){}[0]
    final val location // com.squareup.wire.schema/Service.location|{}location[0]
        final fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Service.location.<get-location>|<get-location>(){}[0]
    final val name // com.squareup.wire.schema/Service.name|{}name[0]
        final fun <get-name>(): kotlin/String // com.squareup.wire.schema/Service.name.<get-name>|<get-name>(){}[0]
    final val options // com.squareup.wire.schema/Service.options|{}options[0]
        final fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Service.options.<get-options>|<get-options>(){}[0]
    final val rpcs // com.squareup.wire.schema/Service.rpcs|{}rpcs[0]
        final fun <get-rpcs>(): kotlin.collections/List<com.squareup.wire.schema/Rpc> // com.squareup.wire.schema/Service.rpcs.<get-rpcs>|<get-rpcs>(){}[0]
    final val type // com.squareup.wire.schema/Service.type|{}type[0]
        final fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Service.type.<get-type>|<get-type>(){}[0]
}
final class com.squareup.wire.schema/WireRun { // com.squareup.wire.schema/WireRun|null[0]
    constructor <init>(kotlin.collections/List<com.squareup.wire.schema/Location>, kotlin.collections/List<com.squareup.wire.schema/Location> =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<kotlin/String> =..., kotlin.collections/List<com.squareup.wire.schema.internal/TypeMover.Move> =..., kotlin/String? =..., kotlin/String? =..., kotlin/String? =..., kotlin.collections/List<com.squareup.wire.schema/Target>, kotlin.collections/Map<kotlin/String, com.squareup.wire.schema/WireRun.Module> =..., kotlin/Boolean =..., kotlin/Boolean =..., kotlin.collections/List<com.squareup.wire.schema/EventListener> =..., kotlin/Boolean =..., kotlin.collections/List<kotlin/String> =...) // com.squareup.wire.schema/WireRun.<init>|<init>(kotlin.collections.List<com.squareup.wire.schema.Location>;kotlin.collections.List<com.squareup.wire.schema.Location>;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;kotlin.collections.List<com.squareup.wire.schema.internal.TypeMover.Move>;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.collections.List<com.squareup.wire.schema.Target>;kotlin.collections.Map<kotlin.String,com.squareup.wire.schema.WireRun.Module>;kotlin.Boolean;kotlin.Boolean;kotlin.collections.List<com.squareup.wire.schema.EventListener>;kotlin.Boolean;kotlin.collections.List<kotlin.String>){}[0]
    final class Module { // com.squareup.wire.schema/WireRun.Module|null[0]
        constructor <init>(kotlin.collections/Set<kotlin/String> =..., com.squareup.wire.schema/PruningRules? =...) // com.squareup.wire.schema/WireRun.Module.<init>|<init>(kotlin.collections.Set<kotlin.String>;com.squareup.wire.schema.PruningRules?){}[0]
        final fun component1(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/WireRun.Module.component1|component1(){}[0]
        final fun component2(): com.squareup.wire.schema/PruningRules? // com.squareup.wire.schema/WireRun.Module.component2|component2(){}[0]
        final fun copy(kotlin.collections/Set<kotlin/String> =..., com.squareup.wire.schema/PruningRules? =...): com.squareup.wire.schema/WireRun.Module // com.squareup.wire.schema/WireRun.Module.copy|copy(kotlin.collections.Set<kotlin.String>;com.squareup.wire.schema.PruningRules?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.squareup.wire.schema/WireRun.Module.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.squareup.wire.schema/WireRun.Module.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.squareup.wire.schema/WireRun.Module.toString|toString(){}[0]
        final val dependencies // com.squareup.wire.schema/WireRun.Module.dependencies|{}dependencies[0]
            final fun <get-dependencies>(): kotlin.collections/Set<kotlin/String> // com.squareup.wire.schema/WireRun.Module.dependencies.<get-dependencies>|<get-dependencies>(){}[0]
        final val pruningRules // com.squareup.wire.schema/WireRun.Module.pruningRules|{}pruningRules[0]
            final fun <get-pruningRules>(): com.squareup.wire.schema/PruningRules? // com.squareup.wire.schema/WireRun.Module.pruningRules.<get-pruningRules>|<get-pruningRules>(){}[0]
    }
    final fun execute(okio/FileSystem, com.squareup.wire/WireLogger) // com.squareup.wire.schema/WireRun.execute|execute(okio.FileSystem;com.squareup.wire.WireLogger){}[0]
    final val escapeKotlinKeywords // com.squareup.wire.schema/WireRun.escapeKotlinKeywords|{}escapeKotlinKeywords[0]
        final fun <get-escapeKotlinKeywords>(): kotlin/Boolean // com.squareup.wire.schema/WireRun.escapeKotlinKeywords.<get-escapeKotlinKeywords>|<get-escapeKotlinKeywords>(){}[0]
    final val eventListeners // com.squareup.wire.schema/WireRun.eventListeners|{}eventListeners[0]
        final fun <get-eventListeners>(): kotlin.collections/List<com.squareup.wire.schema/EventListener> // com.squareup.wire.schema/WireRun.eventListeners.<get-eventListeners>|<get-eventListeners>(){}[0]
    final val modules // com.squareup.wire.schema/WireRun.modules|{}modules[0]
        final fun <get-modules>(): kotlin.collections/Map<kotlin/String, com.squareup.wire.schema/WireRun.Module> // com.squareup.wire.schema/WireRun.modules.<get-modules>|<get-modules>(){}[0]
    final val moves // com.squareup.wire.schema/WireRun.moves|{}moves[0]
        final fun <get-moves>(): kotlin.collections/List<com.squareup.wire.schema.internal/TypeMover.Move> // com.squareup.wire.schema/WireRun.moves.<get-moves>|<get-moves>(){}[0]
    final val onlyVersion // com.squareup.wire.schema/WireRun.onlyVersion|{}onlyVersion[0]
        final fun <get-onlyVersion>(): kotlin/String? // com.squareup.wire.schema/WireRun.onlyVersion.<get-onlyVersion>|<get-onlyVersion>(){}[0]
    final val opaqueTypes // com.squareup.wire.schema/WireRun.opaqueTypes|{}opaqueTypes[0]
        final fun <get-opaqueTypes>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/WireRun.opaqueTypes.<get-opaqueTypes>|<get-opaqueTypes>(){}[0]
    final val permitPackageCycles // com.squareup.wire.schema/WireRun.permitPackageCycles|{}permitPackageCycles[0]
        final fun <get-permitPackageCycles>(): kotlin/Boolean // com.squareup.wire.schema/WireRun.permitPackageCycles.<get-permitPackageCycles>|<get-permitPackageCycles>(){}[0]
    final val protoPath // com.squareup.wire.schema/WireRun.protoPath|{}protoPath[0]
        final fun <get-protoPath>(): kotlin.collections/List<com.squareup.wire.schema/Location> // com.squareup.wire.schema/WireRun.protoPath.<get-protoPath>|<get-protoPath>(){}[0]
    final val rejectUnusedRootsOrPrunes // com.squareup.wire.schema/WireRun.rejectUnusedRootsOrPrunes|{}rejectUnusedRootsOrPrunes[0]
        final fun <get-rejectUnusedRootsOrPrunes>(): kotlin/Boolean // com.squareup.wire.schema/WireRun.rejectUnusedRootsOrPrunes.<get-rejectUnusedRootsOrPrunes>|<get-rejectUnusedRootsOrPrunes>(){}[0]
    final val sinceVersion // com.squareup.wire.schema/WireRun.sinceVersion|{}sinceVersion[0]
        final fun <get-sinceVersion>(): kotlin/String? // com.squareup.wire.schema/WireRun.sinceVersion.<get-sinceVersion>|<get-sinceVersion>(){}[0]
    final val sourcePath // com.squareup.wire.schema/WireRun.sourcePath|{}sourcePath[0]
        final fun <get-sourcePath>(): kotlin.collections/List<com.squareup.wire.schema/Location> // com.squareup.wire.schema/WireRun.sourcePath.<get-sourcePath>|<get-sourcePath>(){}[0]
    final val targets // com.squareup.wire.schema/WireRun.targets|{}targets[0]
        final fun <get-targets>(): kotlin.collections/List<com.squareup.wire.schema/Target> // com.squareup.wire.schema/WireRun.targets.<get-targets>|<get-targets>(){}[0]
    final val treeShakingRoots // com.squareup.wire.schema/WireRun.treeShakingRoots|{}treeShakingRoots[0]
        final fun <get-treeShakingRoots>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/WireRun.treeShakingRoots.<get-treeShakingRoots>|<get-treeShakingRoots>(){}[0]
    final val treeShakingRubbish // com.squareup.wire.schema/WireRun.treeShakingRubbish|{}treeShakingRubbish[0]
        final fun <get-treeShakingRubbish>(): kotlin.collections/List<kotlin/String> // com.squareup.wire.schema/WireRun.treeShakingRubbish.<get-treeShakingRubbish>|<get-treeShakingRubbish>(){}[0]
    final val untilVersion // com.squareup.wire.schema/WireRun.untilVersion|{}untilVersion[0]
        final fun <get-untilVersion>(): kotlin/String? // com.squareup.wire.schema/WireRun.untilVersion.<get-untilVersion>|<get-untilVersion>(){}[0]
}
final const val com.squareup.wire.schema/WIRE_RUNTIME_JAR // com.squareup.wire.schema/WIRE_RUNTIME_JAR|<get-WIRE_RUNTIME_JAR>(){}[0]
    final fun <get-WIRE_RUNTIME_JAR>(): kotlin/String // com.squareup.wire.schema/WIRE_RUNTIME_JAR.<get-WIRE_RUNTIME_JAR>|<get-WIRE_RUNTIME_JAR>(){}[0]
final fun (com.squareup.wire.schema/Schema).com.squareup.wire.schema.internal/withStubs(kotlin.collections/Set<com.squareup.wire.schema/ProtoType>): com.squareup.wire.schema/Schema // com.squareup.wire.schema.internal/withStubs|withStubs@com.squareup.wire.schema.Schema(kotlin.collections.Set<com.squareup.wire.schema.ProtoType>){}[0]
final fun (kotlin.text/StringBuilder).com.squareup.wire.schema.internal/appendDocumentation(kotlin/String) // com.squareup.wire.schema.internal/appendDocumentation|appendDocumentation@kotlin.text.StringBuilder(kotlin.String){}[0]
final fun (kotlin.text/StringBuilder).com.squareup.wire.schema.internal/appendIndented(kotlin/String) // com.squareup.wire.schema.internal/appendIndented|appendIndented@kotlin.text.StringBuilder(kotlin.String){}[0]
final fun (okio/Path).com.squareup.wire.schema.internal/withUnixSlashes(): okio/Path // com.squareup.wire.schema.internal/withUnixSlashes|withUnixSlashes@okio.Path(){}[0]
final fun com.squareup.wire.schema/isWireRuntimeProto(com.squareup.wire.schema/Location): kotlin/Boolean // com.squareup.wire.schema/isWireRuntimeProto|isWireRuntimeProto(com.squareup.wire.schema.Location){}[0]
final fun com.squareup.wire.schema/isWireRuntimeProto(kotlin/String): kotlin/Boolean // com.squareup.wire.schema/isWireRuntimeProto|isWireRuntimeProto(kotlin.String){}[0]
final object com.squareup.wire.schema/CoreLoader : com.squareup.wire.schema/Loader { // com.squareup.wire.schema/CoreLoader|null[0]
    final fun load(kotlin/String): com.squareup.wire.schema/ProtoFile // com.squareup.wire.schema/CoreLoader.load|load(kotlin.String){}[0]
    final fun withErrors(com.squareup.wire.schema/ErrorCollector): com.squareup.wire.schema/CoreLoader // com.squareup.wire.schema/CoreLoader.withErrors|withErrors(com.squareup.wire.schema.ErrorCollector){}[0]
}
sealed class com.squareup.wire.schema/Type { // com.squareup.wire.schema/Type|null[0]
    abstract fun linkMembers(com.squareup.wire.schema/Linker) // com.squareup.wire.schema/Type.linkMembers|linkMembers(com.squareup.wire.schema.Linker){}[0]
    abstract fun linkOptions(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules, kotlin/Boolean) // com.squareup.wire.schema/Type.linkOptions|linkOptions(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules;kotlin.Boolean){}[0]
    abstract fun retainAll(com.squareup.wire.schema/Schema, com.squareup.wire.schema/MarkSet): com.squareup.wire.schema/Type? // com.squareup.wire.schema/Type.retainAll|retainAll(com.squareup.wire.schema.Schema;com.squareup.wire.schema.MarkSet){}[0]
    abstract fun retainLinked(kotlin.collections/Set<com.squareup.wire.schema/ProtoType>, kotlin.collections/Set<com.squareup.wire.schema/Field>): com.squareup.wire.schema/Type? // com.squareup.wire.schema/Type.retainLinked|retainLinked(kotlin.collections.Set<com.squareup.wire.schema.ProtoType>;kotlin.collections.Set<com.squareup.wire.schema.Field>){}[0]
    abstract fun validate(com.squareup.wire.schema/Linker, com.squareup.wire.schema/SyntaxRules) // com.squareup.wire.schema/Type.validate|validate(com.squareup.wire.schema.Linker;com.squareup.wire.schema.SyntaxRules){}[0]
    abstract val documentation // com.squareup.wire.schema/Type.documentation|{}documentation[0]
        abstract fun <get-documentation>(): kotlin/String // com.squareup.wire.schema/Type.documentation.<get-documentation>|<get-documentation>(){}[0]
    abstract val location // com.squareup.wire.schema/Type.location|{}location[0]
        abstract fun <get-location>(): com.squareup.wire.schema/Location // com.squareup.wire.schema/Type.location.<get-location>|<get-location>(){}[0]
    abstract val name // com.squareup.wire.schema/Type.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // com.squareup.wire.schema/Type.name.<get-name>|<get-name>(){}[0]
    abstract val nestedExtendList // com.squareup.wire.schema/Type.nestedExtendList|{}nestedExtendList[0]
        abstract fun <get-nestedExtendList>(): kotlin.collections/List<com.squareup.wire.schema/Extend> // com.squareup.wire.schema/Type.nestedExtendList.<get-nestedExtendList>|<get-nestedExtendList>(){}[0]
    abstract val nestedTypes // com.squareup.wire.schema/Type.nestedTypes|{}nestedTypes[0]
        abstract fun <get-nestedTypes>(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/Type.nestedTypes.<get-nestedTypes>|<get-nestedTypes>(){}[0]
    abstract val options // com.squareup.wire.schema/Type.options|{}options[0]
        abstract fun <get-options>(): com.squareup.wire.schema/Options // com.squareup.wire.schema/Type.options.<get-options>|<get-options>(){}[0]
    abstract val syntax // com.squareup.wire.schema/Type.syntax|{}syntax[0]
        abstract fun <get-syntax>(): com.squareup.wire/Syntax // com.squareup.wire.schema/Type.syntax.<get-syntax>|<get-syntax>(){}[0]
    abstract val type // com.squareup.wire.schema/Type.type|{}type[0]
        abstract fun <get-type>(): com.squareup.wire.schema/ProtoType // com.squareup.wire.schema/Type.type.<get-type>|<get-type>(){}[0]
    constructor <init>() // com.squareup.wire.schema/Type.<init>|<init>(){}[0]
    final fun typesAndNestedTypes(): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/Type.typesAndNestedTypes|typesAndNestedTypes(){}[0]
    final object Companion { // com.squareup.wire.schema/Type.Companion|null[0]
        final fun fromElements(kotlin/String?, kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement>, com.squareup.wire/Syntax): kotlin.collections/List<com.squareup.wire.schema/Type> // com.squareup.wire.schema/Type.Companion.fromElements|fromElements(kotlin.String?;kotlin.collections.List<com.squareup.wire.schema.internal.parser.TypeElement>;com.squareup.wire.Syntax){}[0]
        final fun get(kotlin.collections/List<kotlin/String>, com.squareup.wire.schema/ProtoType, com.squareup.wire.schema.internal.parser/TypeElement, com.squareup.wire/Syntax): com.squareup.wire.schema/Type // com.squareup.wire.schema/Type.Companion.get|get(kotlin.collections.List<kotlin.String>;com.squareup.wire.schema.ProtoType;com.squareup.wire.schema.internal.parser.TypeElement;com.squareup.wire.Syntax){}[0]
        final fun toElements(kotlin.collections/List<com.squareup.wire.schema/Type>): kotlin.collections/List<com.squareup.wire.schema.internal.parser/TypeElement> // com.squareup.wire.schema/Type.Companion.toElements|toElements(kotlin.collections.List<com.squareup.wire.schema.Type>){}[0]
    }
}
